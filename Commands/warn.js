module.exports = {
	name: 'warn',
	description: '–í—ã–¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
	execute(message, client, fs, botconfig) { 
    try {
      let profile = require("./JSON/profile.json");
      var warnerr1_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏—Ç–µ `h.warn <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ> <–∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∞—Ä–Ω–æ–≤> <–ø—Ä–∏—á–∏–Ω–∞>`"
        }
      };
      var warnerr2_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –≤ –í–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –ª–∏–±–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –í–∞—à —Å–µ—Ä–≤–µ—Ä."
        }
      };
      var warnerr3_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ—Å–∫–æ–ª—å–∫—É –±–æ—Ç/–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
        }
      };
      var warnerr4_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description: "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑."
        }
      };
      let member1 =
        message.guild.member(message.mentions.users.first()) ||
        message.guild.members.cache.get(args[0]);
      let gchannel = message.mentions.channels.first();
      let gchannel1 = message.guild.channels.find(t => t.id == gchannel.id);
      let args = message.content
        .split(" " + member1 + " " + gchannel1 + " ")
        .slice(1)
        .join(" ");
      const memberActions = message.guild.member(member1);
      if (message.member.hasPermission("ADMINISTRATOR")) {
        if (args) {
          if (member1) {
            if (gchannel1) {
              if (!profile[member1.id]) {
                profile[member1.id] = {
                  warns: 0
                };
              }
              fs.writeFile(
                "./JSON/profile.json",
                JSON.stringify(profile),
                err => {
                  if (err) console.log(err);
                }
              );

              profile[member1.id].warns++;
              fs.writeFile(
                "./JSON/profile.json",
                JSON.stringify(profile),
                err => {
                  if (err) console.log(err);
                }
              );
              var bansucc_embed = {
                embed: {
                  color: 0xff0000,
                  author: {
                    name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + memberActions.user.tag,
                    icon_url: client.user.avatarURL()
                  },
                  fields: [
                    {
                      name: "–ó–∞–±–∞–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                      value: client.user.tag
                    },
                    {
                      name: "–ü—Ä–∏—á–∏–Ω–∞",
                      value:
                        "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: " + profile[member1.id].warns + " –∏–∑ 3"
                    }
                  ]
                }
              };
              var warnsucc_embed = {
                embed: {
                  color: 0xff0000,
                  author: {
                    name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + memberActions.user.tag,
                    icon_url: client.user.avatarURL()
                  },
                  fields: [
                    {
                      name: "–í—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç",
                      value: message.author.tag
                    },
                    {
                      name: "–ü—Ä–∏—á–∏–Ω–∞",
                      value: args
                    },
                    {
                      name: "–ö–æ–ª-–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π",
                      value: profile[member1.id].warns + " –∏–∑ 3"
                    }
                  ]
                }
              };
              if (profile[member1.id].warns >= 3) {
                memberActions
                  .ban({
                    reason:
                      client.user.tag +
                      ": –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π " +
                      profile[member1.id].warns +
                      " –∏–∑ 3"
                  })
                  .then(() => {
                    gchannel1.send(bansucc_embed);
                  });
              } else {
                gchannel1.send(warnsucc_embed);
              }
              var t_log = {
                embed: {
                  color: 0xff8800,
                  author: {
                    name: "Commands Log"
                  },
                  description:
                    "Member " +
                    message.content +
                    "` on " +
                    message.guild.name +
                    "/" +
                    message.channel.name,
                  fields: [
                    {
                      name: "Server ID",
                      value: message.guild.id
                    },
                    {
                      name: "Channel ID",
                      value: message.channel.id
                    },
                    {
                      name: "User ID",
                      value: message.author.id
                    }
                  ]
                }
              };
            } else {
              message.channel.send(warnerr1_embed);
            }
          } else {
            message.channel.send(warnerr2_embed);
          }
        } else {
          message.channel.send(warnerr1_embed);
        }
      } else {
        message.channel.send(warnerr3_embed);
      }
    } catch (e) {
      if (e.name === "ReferenceError") {
        console.error(e);
      }
    }
	}}
