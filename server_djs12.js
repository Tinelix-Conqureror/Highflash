const Discord = require(`discord.js`);
const forEachTimeout = require("foreach-timeout");
const client = new Discord.Client();
const os = require("os");
const strftime = require("strftime");
const yt = require("ytdl-core");
const fs = require("fs");
const botconfig = require("./JSON/botconfig.json");
const data = require("./JSON/data.json");
const ProgressBar = require("progress");
const { promptMessage } = require("./functions.js");
const randomPuppy = require("random-puppy");
const snekfetch = require("snekfetch");
const requester = require("request");
const chooseArr = ["üóª", "üì∞", "‚úÇ"];
const http = require("http");
const intformat = require("./intformat.js");
const YouTube = require("simple-youtube-api");
const ytapi = new YouTube(botconfig.ytapi_key);
const ghf = require("./JSON/ghf.json");
var resultsh = [];
var messageId = "";

let prefix_a = botconfig.prefix_a;
let prefix_b = botconfig.prefix_b;
let prefix_c = botconfig.prefix_c;

var servers = {};
var prefix = botconfig.prefix;
var blockid = "396331064710135809";
client.login(botconfig.token);


client.on("ready", async () => {
  try {
    process.stdout.write("\x1Bc");
    console.log(`Starting ${client.user.tag}...`);
    console.log("Loading JSON-modules...");
    console.log("Loading Voice Streamer...");
    console.log("Loading FS Component...");
    console.log("Loading Date/Time Format Component...");
    console.log("Loading other components...");
    var timerId = setInterval(function() {
      process.stdout.write("\x1Bc");
      var str = 0;
      var membc = "0";
      var onlinecount = 0;
      var ar = client.guilds.cache.array();
      for (let i = 0; i < ar.length; i++) {
        str += ar[i].presences.cache.size;
      }
      console.log(
        `\n          ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà\n               ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà\n  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà\n ‚ñà‚ñà       ‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà\n ‚ñà‚ñà       ‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà    ‚ñà‚ñà\n ‚ñà‚ñà       ‚ñà‚ñà \n  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà             computers\n\nXStep Bot ${botconfig.version} \(${botconfig.date}\)\n\(C\)opyright 2019-2020 DMIT Development. All rights reserved.\n\nThis script started successfully.`
      );
      console.log(
        `\nPing: ${client.ws.ping.toFixed(2)} ms | Memory usage: ${Math.round(
          process.memoryUsage().heapUsed / 1024
        )} kB\nServers: ${client.guilds.cache.size} | Users: ${
          client.users.cache.size
        } | Online: ${str}`
      );
    }, 2000);
  } catch (e) {
    console.log(
      `\n          ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà\n               ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà\n  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà\n ‚ñà‚ñà       ‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà\n ‚ñà‚ñà       ‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà    ‚ñà‚ñà\n ‚ñà‚ñà       ‚ñà‚ñà \n  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà             computers\n\nXStep Bot ${botconfig.version} \(${botconfig.date}\)\n\(C\)opyright 2019-2020 DMIT Development. All rights reserved.\n\nThis script started successfully.`
    );
    console.log("\nNo servers.");
  }
});
function checkTime() {
  client.setTimeout(checkTime, (59 - new Date().getUTCMinutes) * 1000 * 60);
  getHTTPResponce("https://google.com?any_else_api")
    .then(body => {
      var result = JSON.parse(body);
      var temp = 0;
    })
    .catch(error => {});
}

var timerId = setInterval(function users() {
  var str = 0;
  var membc = "0";
  var onlinecount = 0;
  var ar = client.guilds.cache.array();
  for (let i = 0; i < ar.length; i++) {
    str += ar[i].presences.cache.size;
  }
  var moscow = new Date().toLocaleString("en-US", {
    timeZone: "Europe/Moscow"
  });
  client.user.setActivity(`${strftime("%H:%M", new Date(moscow))} (UTC+3)`, {
    type: "LISTENING"
  });
  timerId = setTimeout(function servers() {
    client.user.setActivity(
      `${client.guilds.cache.size} servers | ${botconfig.prefix}help`,
      { type: "LISTENING" }
    );
    timerId = setTimeout(function clock() {
      client.user.setActivity(
        `${client.users.cache.size} users | ${botconfig.prefix}help`,
        { type: "LISTENING" }
      );
      timerId = setTimeout(function clock() {
        client.user.setActivity(`${str} online | ${botconfig.prefix}help`, {
          type: "LISTENING"
        });
      }, 4000);
    }, 4000);
  }, 4000);
}, 32000);

function emoji(id) {
  return client.emojis.get(id).toString();
}

var blockmsg_embed = {
  embed: {
    color: 0xff0000,
    author: {
      name: "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    },
    description:
      "–ê–≤—Ç–æ—Ä –±–æ—Ç–∞ –æ—Ç–∫–ª—é—á–∏–ª –í–∞–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ –ø—Ä–∏—á–∏–Ω–µ: *–æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –≤ –æ—Ç–∑—ã–≤–µ*"
  }
};

client.on("guildCreate", guild => {
  var t_log = {
    embed: {
      color: 0x55ff55,
      author: {
        name: "Servers Log"
      },
      thumbnail: {
        url: guild.iconURL()
      },
      description:
        "XStep Bot has joined the **" +
        guild.name +
        "** server! Now it has **" +
        client.guilds.cache.size +
        "** servers. :clap: :clap:\nThanks!",
      fields: [
        {
          name: "Server ID",
          value: guild.id
        },
        {
          name: "Channels | Members | Roles | Online",
          value:
            guild.channels.cache.size +
            " ch. | " +
            guild.memberCount +
            " memb. | " +
            guild.roles.cache.size +
            " roles | " +
            guild.presences.cache.size +
            " online"
        },
        {
          name: "Onwer",
          value: guild.owner.user.tag + " (" + guild.owner.user.id + ")"
        },
        {
          name: "Created at",
          value: strftime("%d/%m/%Y %H:%M", new Date(guild.createdTimestamp))
        }
      ]
    }
  };
  var welcome_embed = {
    embed: {
      color: 0x4400ff,

      author: {
        name: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
        icon_url: client.user.avatarURL()
      },
      description:
        ":wave: " +
        guild.owner +
        ", –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ —è –í–∞—Å –±–µ—Å–ø–æ–∫–æ–∏–ª, —Ö–æ—Ä–æ—à–æ?\n–Ø —Ä–∞–¥, —á—Ç–æ –í—ã –∏–ª–∏ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª –±–æ—Ç–∞ –Ω–∞ –í–∞—à —Å–µ—Ä–≤–µ—Ä! –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –ø–∏—à–∏—Ç–µ `dm~help`.\n\n**–≠—Ç–æ –µ—â–µ –Ω–µ –≤—Å–µ!** –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π <@507540368443834374>, –ø–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã `dm~donate`."
    }
  };
  client.channels.cache.get("564022728143929370").send(t_log);
});

client.on("guildDelete", guild => {
  var t_log = {
    embed: {
      color: 0xff0000,
      author: {
        name: "Servers Log"
      },
      thumbnail: {
        url: guild.iconURL()
      },
      description:
        "XStep Bot left, kicked out, banned from **" +
        guild.name +
        "** server! Now it has **" +
        client.guilds.cache.size +
        "** servers. \nCan you explain to the bot author what you didn't like? :worried:"
    }
  };
  client.channels.cache.get("564022728143929370").send(t_log);
});

client.on("ready", () => {
  process.stdout.write("\x1Bc");
  client.user.setActivity("Starting XStep Bot...", { type: "LISTENING" });
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (
    message.content.startsWith(prefix + "health") ||
    message.content.startsWith(prefix_a + "health") ||
    message.content.startsWith(prefix_b + "health") ||
    message.content.startsWith(prefix_c + "health")
  ) {
    var t_log = {
      embed: {
        color: 0xff8800,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    let platform = "";
    const plaform = os.platform();
    if (os.platform() === "win32") {
      platform = "<:windows:670835960254169118> Windows (" + os.release() + ")";
    } else {
      if (os.platform() === "android") {
        platform =
          "<:android:670837143467458560> Android —Å Termux (" +
          os.release() +
          ")";
      } else {
        if (os.platform() === "linux") {
          platform = "<:linux:670836734447190016> Linux (" + os.release() + ")";
        }
      }
    }

    var bothealth = "";
    if (client.ws.ping > 1500) {
      bothealth = "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–Ω–ª–∞–π–Ω–µ, –Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç —Å –±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π.";
    } else {
      bothealth = "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–Ω–ª–∞–π–Ω–µ, –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞.";
    }
    var test_embed = {
      embed: {
        color: 0xff9900, // —Ü–≤–µ—Ç –ø–æ–ª–æ—Å–∫–∏ —Å–ª–µ–≤–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 0xRRGGBB, –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —É–∫–∞–∑–∞–Ω –æ—Ä–∞–Ω–∂–µ–≤—ã–π —Ü–≤–µ—Ç
        author: {
          name: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞", // –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ (Embed) —Å–æ–æ–±—â–µ–Ω–∏—è
          icon_url: client.user.avatarURL()
        },
        description: bothealth, // –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        fields: [
          {
            name: "üíæ –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –ø–∞–º—è—Ç—å", // –∏–º—è –ø–æ–ª—è
            value: Math.round(process.memoryUsage().heapUsed / 1024) + " –∫–ë",
            inline: true
          },
          {
            name: "üèì –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏",
            value: client.ws.ping.toFixed(2) + " –º—Å–µ–∫",
            inline: true
          },
          {
            name: "\u200b",
            value: "\u200b",
            inline: true
          },
          {
            name: "üèò –ö–æ–ª-–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ | –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            value: client.guilds.cache.size + " | " + client.users.cache.size,
            inline: true
          },
          {
            name: "‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã",
            value: strftime(
              "%H —á. %M –º–∏–Ω. %S —Å–µ–∫.",
              new Date(client.uptime - 86400000)
            ),
            inline: true
          },
          {
            name: "\u200b",
            value: "\u200b",
            inline: true
          },
          {
            name: "üõ† –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞",
            value: platform,
            inline: true
          },
          {
            name: "üí° –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä",
            value: os.cpus()[0].model,
            inline: true
          },
          {
            name: "\u200b",
            value: "\u200b",
            inline: true
          },
          {
            name: "üóÉÔ∏è –í–µ—Ä—Å–∏—è Node.js",
            value: process.version,
            inline: true
          },
          {
            name: "üóÉÔ∏è –í–µ—Ä—Å–∏—è Discord.js",
            value: Discord.version,
            inline: true
          },
        ]
      }
    };
    client.channels.cache.get("564022728143929370").send(t_log);
    message.channel.send(test_embed); // message.channel.send(<–∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–≥–æ Embed>)
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "about") ||
    message.content.startsWith(prefix_a + "about") ||
    message.content.startsWith(prefix_b + "about") ||
    message.content.startsWith(prefix_c + "about")
  ) {
    var t_log = {
      embed: {
        color: 0x008800,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      let botowner = client.users.cache.find(user => user.id === "484921597015359488");
      var about_embed = {
        embed: {
          color: 0x0088ff,
          author: {
            name: "–û –±–æ—Ç–µ XStep Bot",
            icon_url: client.user.avatarURL()
          },
          fields: [
            {
              name: "–í–µ—Ä—Å–∏—è",
              value: botconfig.version + " (" + botconfig.date + ")"
            },
            {
              name: "–ê–≤—Ç–æ—Ä/–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
              value: botowner.tag
            },
            {
              name: "–ò—Å—Ö–æ–¥–Ω—ã–µ –∫–æ–¥—ã",
              value: "https://github.com/dmitryevdev/xstepbot"
            },
            {
              name: "–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞",
              value:
                "Copyright ¬© DMIT Computers, 2019-2020. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã."
            }
          ]
        }
      };
      message.channel.send(about_embed);
    }
  }
});

client.on("message", message => {
  if (!message.guild) return;
  if (message.content.startsWith(prefix + "mass-say ")) {
    if (message.author.id !== "484921597015359488") return;
    client.guilds.forEach(guild => {
      let channels = guild.channels.filter(
        channel =>
          channel.type === "text" &&
          channel
            .permissionsFor(guild.members.cache.get(client.user.id))
            .has("SEND_MESSAGES")
      );
      if (channels.size > 0)
        channels.first().send(
          message.content
            .split(" ")
            .slice(1)
            .join(" ")
        );
    });
  }
});

client.on("message", message => {
  if (!message.guild) return;
  if (
    message.content.startsWith(prefix + "ban") ||
    message.content.startsWith(prefix_a + "ban") ||
    message.content.startsWith(prefix_b + "ban") ||
    message.content.startsWith(prefix_c + "ban")
  ) {
    if (message.channel.type === "dm") return;

    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      const user1 = message.mentions.users.first();
      const member = message.guild.member(user1);
      let args = message.content
        .split(" " + member + " ")
        .slice(1)
        .join(" ");
      console.log(args);
      var banerr3_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ—Å–∫–æ–ª—å–∫—É –±–æ—Ç/–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
        }
      };
      var banerr2_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –≤ –í–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –ª–∏–±–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –í–∞—à —Å–µ—Ä–≤–µ—Ä."
        }
      };
      var banerr1_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ `xs.ban <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ> <–ø—Ä–∏—á–∏–Ω–∞>`"
        }
      };
      var banerr4_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description: "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑."
        }
      };
      var bansucc_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + user1.tag,
            icon_url: client.user.avatarURL()
          },
          fields: [
            {
              name: "–ó–∞–±–∞–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
              value: message.author.tag
            },
            {
              name: "–ü—Ä–∏—á–∏–Ω–∞",
              value: (args || "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
            }
          ]
        }
      };
      if (user1) {
        if (message.member.hasPermission("ADMINISTRATOR")) {
          if (member) {
            member
              .ban({
                reason: message.author.tag + ": " + (args || "–ù–µ —É–∫–∞–∑–∞–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞")
              })
              .then(() => {
                message.channel.send(bansucc_embed);
                var ban_log = {
                  embed: {
                    color: 0xff8800,
                    author: {
                      name: message.author.tag,
                      icon_url: client.user.avatarURL()
                    },
                    description:
                      user1.tag + " banned by user " + message.author.tag,
                    fields: [
                      {
                        name: "Server ID",
                        value: message.guild.id
                      },
                      {
                        name: "Channel ID",
                        value: message.channel.id
                      },
                      {
                        name: "User ID",
                        value: message.author.id
                      }
                    ]
                  }
                };

                client.channels.cache.get("564022728143929370").send(ban_log);
              })
              .catch(err => {
                message.channel.send(banerr4_embed);
                console.error(err);
              });
          } else {
            message.channel.send(banerr4_embed);
          }
        } else {
          message.channel.send(banerr3_embed);
        }
      } else {
        message.channel.send(banerr1_embed);
      }
    }
  }
});

client.on("message", message => {
  if (message.channel.type === "dm") return;
  if (message.content.startsWith(prefix + "audio play ")) {
    if (!servers[message.guild.id])
      servers[message.guild.id] = {
        queue: []
      };
    var server = servers[message.guild.id];
    server.queue.push(
      message.content
        .split(" play ")
        .slice(1)
        .join(" ")
    );
    var t_log = {
      embed: {
        color: 0xff8800,
        author: {
          name: message.author.tag,
          icon_url: client.user.avatarURL()
        },
        description:
          message.author.tag +
          " listening to music from " +
          message.content
            .split(" play ")
            .slice(1)
            .join(" ") +
          " on **" +
          message.guild.name +
          "**",
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    var auderr1_embed = {
      embed: {
        color: 0xff0000,

        author: {
          name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
          icon_url: client.user.avatarURL()
        },
        description:
          ":no_entry_sign: <@" +
          message.author +
          ">, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–æ–π–¥–∏—Ç–µ –≤ –ª—é–±–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!"
      }
    };
    var auderr2_embed = {
      embed: {
        color: 0xff0000,

        author: {
          name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
          icon_url: client.user.avatarURL()
        },
        description:
          ":no_entry_sign: –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏ " +
          message.content
            .split(" play ")
            .slice(1)
            .join(" ") +
          ". \n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å —Å—Å—ã–ª–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–¥–Ω–µ–µ.\n–ï—Å–ª–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å—Å—ã–ª–∫–µ, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –∞–¥—Ä–µ—Å."
      }
    };

    var auderr4_embed = {
      embed: {
        color: 0xff0000,

        author: {
          name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
          icon_url: client.user.avatarURL()
        },
        description:
          ":no_entry_sign: –í–∏–¥–µ–æ (" +
          message.content
            .split(" play ")
            .slice(1)
            .join(" ") +
          ") –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 20 –º–∏–Ω—É—Ç."
      }
    };
    var audload_embed = {
      embed: {
        color: 0x7b50ff,

        author: {
          name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
          icon_url: client.user.avatarURL()
        },
        description: ":hourglass_flowing_sand: –ó–∞–≥—Ä—É–∑–∫–∞..."
      }
    };
    const streamOptions = { bitrate: 80000 };
    client.channels.cache.get("564022728143929370").send(t_log);
    const voiceChannel = message.member.voice.channel;
    if (!voiceChannel) {
      return message.channel.send(auderr1_embed);
    }
    const valid = yt.validateURL(
      message.content
        .split(" play ")
        .slice(1)
        .join(" ")
    );
    var authorId = message.author;
    if (!valid) {
      return ytapi
        .searchVideos(
          message.content
            .split(" play ")
            .slice(1)
            .join(" "),
          4
        )
        .then(results => {
          let information = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
          let information_author = "-";
          let information_viewcount = "-";
          let information_published = "-";
          voiceChannel.join().then(connnection => {
            var server = servers[message.guild.id];
            message.channel
              .send(audload_embed)
              .then(function(message) {
                var timerId = setInterval(function() {
                  clearInterval(timerId);
                  message.delete();
				  try {
                  yt.getInfo(
                    "https://youtube.com/watch?v=" + results[0].id,
                    function(err, info) {
                      if (err) {
                        information = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
                        information_author = "-";
                        information_viewcount = "-";
                        information_published = "-";
                      } else {
                        var strftimeRU = strftime.localizeByIdentifier("ru_RU");
                        information = info.player_response.videoDetails.title;
                        information_author =
                          info.player_response.videoDetails.author;
                        if (
                          info.player_response.videoDetails.viewCount >=
                          1000000000
                        ) {
                          information_viewcount =
                            (
                              info.player_response.videoDetails.viewCount /
                              1000000000
                            ).toFixed(2) + " –º–ª—Ä–¥.";
                        }
                        if (
                          info.player_response.videoDetails.viewCount >=
                            1000000 &&
                          info.player_response.videoDetails.viewCount <
                            1000000000
                        ) {
                          information_viewcount =
                            (
                              info.player_response.videoDetails.viewCount /
                              1000000
                            ).toFixed(2) + " –º–ª–Ω.";
                        }
                        if (
                          info.player_response.videoDetails.viewCount >= 1000 &&
                          info.player_response.videoDetails.viewCount < 1000000
                        ) {
                          information_viewcount =
                            (
                              info.player_response.videoDetails.viewCount / 1000
                            ).toFixed(2) + " —Ç—ã—Å—è—á";
                        }
                        if (
                          info.player_response.videoDetails.viewCount < 1000
                        ) {
                          information_viewcount =
                            info.player_response.videoDetails.viewCount;
                        }
                        information_published = strftimeRU(
                          "%d.%m.%Y",
                          new Date(
                            new Date(info.published).toLocaleString("en-US", {
                              timeZone: "Europe/Moscow"
                            })
                          )
                        );
                      }
                      var audplay_embed = {
                        embed: {
                          color: 0x7b50ff,
                          author: {
                            name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                            icon_url: client.user.avatarURL()
                          },
                          description:
                            "‚ñ∂ <@" +
                            authorId +
                            ">: –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è **" +
                            results[0].title +
                            "** –Ω–∞ " +
                            streamOptions.bitrate / 1000 +
                            " kbps",
                          fields: [
                            {
                              name: "–ê–≤—Ç–æ—Ä",
                              value: results[0].channel.title
                            },
                            {
                              name: "–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤",
                              value: information_viewcount
                            },
                            {
                              name: "–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ",
                              value: information_published
                            }
                          ]
                        }
                      };
                      message.channel.send(audplay_embed);
                    }
                  );
				  } catch(err) {
					var audsrcerr_embed = {
                        embed: {
                          color: 0xff0000,
                          author: {
                            name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                            icon_url: client.user.avatarURL()
                          },
                          description:
                            ":no_entry_sign: <@" +
                            authorId +
                            ">, –ø–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –ª–∏–±–æ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ª–∏–±–æ —Å –ø–æ–∏—Å–∫–æ–º –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ú–æ–∂–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ—Ç–µ –µ—â–µ —Ä–∞–∑?",
                        }
                      };
					  message.channel.send(audsrcerr_embed);
				  };
                }, 10000);
              })
              .catch(function() {
                //Something
              });
            let stream = yt("https://youtube.com/watch?v=" + results[0].id, {
              format: "mp3",
              audioonly: true
            });
            server.queue.shift();
            const dispatcher = connnection.play(stream, streamOptions);
            dispatcher.on("end", () => {
              if (server.queue[0]) {
                server.dispatcher;
                return message.guild.voiceConnection.disconnect();
              }
            });
          });
        })
        .catch(console.log);
    }
    voiceChannel.join().then(connnection => {
      var server = servers[message.guild.id];
      message.channel
        .send(audload_embed)
        .then(function(message) {
          var timerId = setInterval(function() {
            clearInterval(timerId);
            message.delete();
          }, 10000);
        })
        .catch(function() {
          //Something
        });
      let stream = yt(server.queue[0], {
        format: "mp3",
        audioonly: true
      });
      server.queue.shift();
      const dispatcher = connnection.play(stream, streamOptions);
      dispatcher.on("end", () => {
        if (server.queue[0]) {
          server.dispatcher;
          return message.guild.voiceConnection.disconnect();
        }
      });
    });
    yt.getInfo(
      message.content
        .split(" ")
        .slice(1)
        .join(" "),
      function(err, info) {
        var auderr2_embed = {
          embed: {
            color: 0xff0000,

            author: {
              name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
              icon_url: client.user.avatarURL()
            },
            description:
              ":no_entry_sign: –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏ " +
              message.content
                .split(" play ")
                .slice(1)
                .join(" ") +
              ". \n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å —Å—Å—ã–ª–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–¥–Ω–µ–µ.\n–ï—Å–ª–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å—Å—ã–ª–∫–µ, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –∞–¥—Ä–µ—Å."
          }
        };
        let information = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
        let information_author = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
        let information_viewcount = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
        let information_published = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
        var timerId = setInterval(function() {
          clearInterval(timerId);
          if (err) {
            information = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
            information_author = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
            information_viewcount = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
            information_published = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)";
          } else {
            var strftimeRU = strftime.localizeByIdentifier("ru_RU");
            information = info.player_response.videoDetails.title;
            information_author = info.player_response.videoDetails.author;
            if (info.player_response.videoDetails.viewCount >= 1000000000) {
              information_viewcount =
                (
                  info.player_response.videoDetails.viewCount / 1000000000
                ).toFixed(2) + " –º–ª—Ä–¥.";
            }
            if (
              info.player_response.videoDetails.viewCount >= 1000000 &&
              info.player_response.videoDetails.viewCount < 1000000000
            ) {
              information_viewcount =
                (info.player_response.videoDetails.viewCount / 1000000).toFixed(
                  2
                ) + " –º–ª–Ω.";
            }
            if (
              info.player_response.videoDetails.viewCount >= 1000 &&
              info.player_response.videoDetails.viewCount < 1000000
            ) {
              information_viewcount =
                (info.player_response.videoDetails.viewCount / 1000).toFixed(
                  2
                ) + " —Ç—ã—Å—è—á";
            }
            if (info.player_response.videoDetails.viewCount < 1000) {
              information_viewcount =
                info.player_response.videoDetails.viewCount;
            }
            information_published = strftimeRU(
              "%d.%m.%Y",
              new Date(
                new Date(info.published).toLocaleString("en-US", {
                  timeZone: "Europe/Moscow"
                })
              )
            );
          }
          var audplay_embed = {
            embed: {
              color: 0x7b50ff,

              author: {
                name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                icon_url: client.user.avatarURL()
              },
              description:
                "‚ñ∂ <@" +
                message.author +
                ">: –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è **" +
                information +
                "** –Ω–∞ " +
                streamOptions.bitrate / 1000 +
                " kbps",
              fields: [
                {
                  name: "–ê–≤—Ç–æ—Ä",
                  value: information_author
                },
                {
                  name: "–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤",
                  value: information_viewcount
                },
                {
                  name: "–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ",
                  value: information_published
                }
              ]
            }
          };
          message.channel.send(audplay_embed);
        }, 11000);
      }
    );
    if (!voiceChannel) {
      return message.channel.send(auderr1_embed);
    }

    var urlyt = {
      url: message.content
        .split(" play ")
        .slice(1)
        .join(" ")
    };

    fs.writeFile("json/data.json", JSON.stringify(urlyt), function(err) {
      if (err) {
        return console.log(err);
      }
    });
  }
});

client.on("message", message => {
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "warn") ||
    message.content.startsWith(prefix_a + "warn") ||
    message.content.startsWith(prefix_b + "warn") ||
    message.content.startsWith(prefix_c + "warn")
  ) {
    try {
      let profile = require("./JSON/profile.json");
      var warnerr1_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏—Ç–µ `xs.warn <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ> <–∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∞—Ä–Ω–æ–≤> <–ø—Ä–∏—á–∏–Ω–∞>`"
        }
      };
      var warnerr2_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –≤ –í–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –ª–∏–±–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –í–∞—à —Å–µ—Ä–≤–µ—Ä."
        }
      };
      var warnerr3_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ—Å–∫–æ–ª—å–∫—É –±–æ—Ç/–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
        }
      };
      var warnerr4_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description: "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑."
        }
      };
      let member1 =
        message.guild.member(message.mentions.users.first()) ||
        message.guild.members.cache.get(args[0]);
      let gchannel = message.mentions.channels.first();
      let gchannel1 = message.guild.channels.find(t => t.id == gchannel.id);
      let args = message.content
        .split(" " + member1 + " " + gchannel1 + " ")
        .slice(1)
        .join(" ");
      const memberActions = message.guild.member(member1);
      if (message.member.hasPermission("ADMINISTRATOR")) {
        if (args) {
          if (member1) {
            if (gchannel1) {
              if (!profile[member1.id]) {
                profile[member1.id] = {
                  warns: 0
                };
              }
              fs.writeFile(
                "./JSON/profile.json",
                JSON.stringify(profile),
                err => {
                  if (err) console.log(err);
                }
              );

              profile[member1.id].warns++;
              fs.writeFile(
                "./JSON/profile.json",
                JSON.stringify(profile),
                err => {
                  if (err) console.log(err);
                }
              );
              var bansucc_embed = {
                embed: {
                  color: 0xff0000,
                  author: {
                    name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + memberActions.user.tag,
                    icon_url: client.user.avatarURL()
                  },
                  fields: [
                    {
                      name: "–ó–∞–±–∞–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                      value: client.user.tag
                    },
                    {
                      name: "–ü—Ä–∏—á–∏–Ω–∞",
                      value:
                        "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: " + profile[member1.id].warns + " –∏–∑ 3"
                    }
                  ]
                }
              };
              var warnsucc_embed = {
                embed: {
                  color: 0xff0000,
                  author: {
                    name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + memberActions.user.tag,
                    icon_url: client.user.avatarURL()
                  },
                  fields: [
                    {
                      name: "–í—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç",
                      value: message.author.tag
                    },
                    {
                      name: "–ü—Ä–∏—á–∏–Ω–∞",
                      value: args
                    },
                    {
                      name: "–ö–æ–ª-–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π",
                      value: profile[member1.id].warns + " –∏–∑ 3"
                    }
                  ]
                }
              };
              if (profile[member1.id].warns >= 3) {
                memberActions
                  .ban({
                    reason:
                      client.user.tag +
                      ": –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π " +
                      profile[member1.id].warns +
                      " –∏–∑ 3"
                  })
                  .then(() => {
                    gchannel1.send(bansucc_embed);
                  });
              } else {
                gchannel1.send(warnsucc_embed);
              }
              var t_log = {
                embed: {
                  color: 0xff8800,
                  author: {
                    name: "Commands Log"
                  },
                  description:
                    "Member " +
                    message.content +
                    "` on " +
                    message.guild.name +
                    "/" +
                    message.channel.name,
                  fields: [
                    {
                      name: "Server ID",
                      value: message.guild.id
                    },
                    {
                      name: "Channel ID",
                      value: message.channel.id
                    },
                    {
                      name: "User ID",
                      value: message.author.id
                    }
                  ]
                }
              };
            } else {
              message.channel.send(warnerr1_embed);
            }
          } else {
            message.channel.send(warnerr2_embed);
          }
        } else {
          message.channel.send(warnerr1_embed);
        }
      } else {
        message.channel.send(warnerr3_embed);
      }
    } catch (e) {
      if (e.name === "ReferenceError") {
        console.error(e);
      }
    }
  }
});

client.on("message", message => {
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "audio leave") ||
    message.content.startsWith(prefix_a + "audio leave") ||
    message.content.startsWith(prefix_b + "audio leave") ||
    message.content.startsWith(prefix_c + "audio leave")
  ) {
    var t_log = {
      embed: {
        color: 0xff8800,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    var audpause_embed = {
      embed: {
        color: 0x7b50ff,

        author: {
          name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
          icon_url: client.user.avatarURL()
        },
        description:
          "‚èπÔ∏è –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.\n–î–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ç—Ä–µ–∫–∞ –≤–≤–µ–¥–∏—Ç–µ `xs.audio play`"
      }
    };
    var audpause2_embed = {
      embed: {
        color: 0x7b50ff,

        author: {
          name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
          icon_url: client.user.avatarURL()
        },
        description:
          "‚èπÔ∏è –ë–æ—Ç —É–∂–µ –≤—ã—à–µ–ª —Å –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤."
      }
    };
    if (!message.guild.voice) return message.channel.send(audpause2_embed);
    message.channel.send(audpause_embed);
    var server = servers[message.guild.id];
    message.guild.voice.channel.leave();
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "goals") ||
    message.content.startsWith(prefix_a + "goals") ||
    message.content.startsWith(prefix_b + "goals") ||
    message.content.startsWith(prefix_c + "goals")
  ) {
    var t_log = {
      embed: {
        color: 0x00aa00,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      var maxValue;
      var goalcompleted;
      var goalword;
      var goalcompletetedIcon;
      var goaluncompletetedIcon;
      var goalIcon;
      var goalIcon2;
      if (message.guild.memberCount <= 10) {
        maxValue = 10;
        goalcompleted = 0;
        goalword = " —Ü–µ–ª–µ–π";
        goalcompletetedIcon = "**:arrow_right: 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**\n";
        goaluncompletetedIcon =
          ":negative_squared_cross_mark: 50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 200 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 500 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 1000 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤";
        goalIcon = goaluncompletetedIcon;
      }
      if (message.guild.memberCount <= 50 && message.guild.memberCount > 10) {
        maxValue = 50;
        goalcompleted = 1;
        goalword = " —Ü–µ–ª—å";
        goalcompletetedIcon =
          ":white_check_mark: 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n**:arrow_right: 50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**\n";
        goaluncompletetedIcon =
          ":negative_squared_cross_mark: 100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 200 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 500 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 1000 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤";
        goalIcon = goalcompletetedIcon;
      }
      if (message.guild.memberCount <= 100 && message.guild.memberCount > 50) {
        maxValue = 100;
        goalcompleted = 2;
        goalword = " —Ü–µ–ª–∏";
        goalcompletetedIcon =
          ":white_check_mark: 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:white_check_mark: 50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n**:arrow_right: 100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**";
        goaluncompletetedIcon =
          "\n:negative_squared_cross_mark: 200 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 500 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 1000 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤";
        goalIcon = goalcompletetedIcon;
      }
      if (message.guild.memberCount <= 200 && message.guild.memberCount > 100) {
        maxValue = 200;
        goalcompleted = 3;
        goalword = " —Ü–µ–ª–∏";
        goalcompletetedIcon =
          ":white_check_mark: 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:white_check_mark: 50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:white_check_mark: 100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n**:arrow_right: 200 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**";
        goaluncompletetedIcon =
          "\n:negative_squared_cross_mark: 500 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:negative_squared_cross_mark: 1000 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤";
        goalIcon = goalcompletetedIcon;
      }
      if (message.guild.memberCount <= 500 && message.guild.memberCount > 200) {
        maxValue = 500;
        goalcompleted = 4;
        goalword = " —Ü–µ–ª–∏";
        goalcompletetedIcon =
          ":white_check_mark: 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:white_check_mark: 50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:white_check_mark: 100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n**:arrow_right: 500 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**";
        goaluncompletetedIcon =
          "\n:negative_squared_cross_mark: 1000 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤";
        goalIcon = goalcompletetedIcon;
      }
      if (
        message.guild.memberCount <= 1000 &&
        message.guild.memberCount > 500
      ) {
        maxValue = 1000;
        goalcompleted = 5;
        goalword = " —Ü–µ–ª–µ–π";
        goalcompletetedIcon =
          ":white_check_mark: 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:white_check_mark: 50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n:white_check_mark: 100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n**:arrow_right: 500 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**";
        goaluncompletetedIcon =
          "\n:negative_squared_cross_mark: 1000 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤";
        goalIcon = goalcompletetedIcon;
      }
      var bar = new ProgressBar(
        "```–ü—Ä–æ—Ü–µ—Å—Å: \n:bar‚îÇ :percent (:current –∏–∑ :total)```",
        {
          incomplete: " ",
          complete: "‚ñà",
          total: maxValue,
          curr: message.guild.memberCount - 1,
          width: 20
        }
      );
      bar.tick(1);
      var bar2 = new ProgressBar(
        "```–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: \n:bar‚îÇ :percent (:current –∏–∑ :total)```",
        {
          incomplete: " ",
          complete: "‚ñà",
          total: message.guild.memberCount,
          curr: message.guild.presences.cache.size,
          width: 20
        }
      );
      bar2.tick(1);
      var goal_embed = {
        embed: {
          color: 0x7b50ff,
          author: {
            name: "–¶–µ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞",
            icon_url: message.author.avatarURL()
          },
          description:
            bar.lastDraw +
            bar2.lastDraw +
            "\n**–¢–µ–∫—É—â–∞—è —Ü–µ–ª—å:** –Ω–∞–±—Ä–∞—Ç—å " +
            maxValue +
            " —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–ø—Ä–æ–π–¥–µ–Ω–æ " +
            goalcompleted +
            goalword +
            " –∏–∑ " +
            "5" +
            ").",
          fields: [
            {
              name: "–¶–µ–ª–∏",
              value: goalcompletetedIcon + goaluncompletetedIcon + "\n\n–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: " + message.guild.memberCount
            }
          ]
        }
      };
      message.channel.send(goal_embed);
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "report") ||
    message.content.startsWith(prefix_a + "report") ||
    message.content.startsWith(prefix_b + "report") ||
    message.content.startsWith(prefix_c + "report")
  ) {
    var reportmsg_embed = {
      embed: {
        color: 0x008be9,

        author: {
          name: "–°–ª—É–∂–±–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ XStep",
          icon_url: client.user.avatarURL()
        },
        description:
          message.author.tag +
          ' –æ—Ç–ø—Ä–∞–≤–∏–ª –∂–∞–ª–æ–±—É: "' +
          message.content.split(" ").slice(1) +
          '"',
        fields: [
          {
            name: "–ò–º—è –∏ ID —Å–µ—Ä–≤–µ—Ä–∞",
            value: message.guild.name + " | " + message.guild.id
          },
          {
            name: "–ò–º—è –∏ ID –∫–∞–Ω–∞–ª–∞",
            value: message.channel.name + " | " + message.channel.id
          },
          {
            name: "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            value: message.author.id
          }
        ]
      }
    };

    var t_log = {
      embed: {
        color: 0x2255ff,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      var supportbug_embed = {
        embed: {
          color: 0x008be9,

          author: {
            name: "–°–ª—É–∂–±–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ XStep",
            icon_url: client.user.avatarURL()
          },
          description:
            "‚ùì –ê–≤—Ç–æ—Ä –±–æ—Ç–∞ –æ—Ç–≤–µ—Ç–∏—Ç —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞."
        }
      };
      message.channel.send(supportbug_embed);
      client.channels.cache.get("564022728143929370").send(t_log);

      let str = "<@484921597015359488>"; //Just assuming some random tag.

      //removing any sign of < @ ! >...
      //the exclamation symbol comes if the user has a nickname on the server.
      let id = str.replace(/[<@!>]/g, "");

      client.users.fetch(id).then(user => {
        user.send(reportmsg_embed);
      });
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "reg") ||
    message.content.startsWith(prefix_a + "reg") ||
    message.content.startsWith(prefix_b + "reg") ||
    message.content.startsWith(prefix_c + "reg")
  ) {
    if (message.guild.id !== "716943234982740018") return;
    var reportmsg_embed = {
      embed: {
        color: 0xff0055,

        author: {
          name: "–°–ª—É–∂–±–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ XStep",
          icon_url: client.user.avatarURL()
        },
        description:
          message.author.tag + " —Ö–æ—á–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ –í–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ",
        fields: [
          {
            name: "–ò–º—è –∏ ID —Å–µ—Ä–≤–µ—Ä–∞",
            value: message.guild.name + " | " + message.guild.id
          },
          {
            name: "–ò–º—è –∏ ID –∫–∞–Ω–∞–ª–∞",
            value: message.channel.name + " | " + message.channel.id
          },
          {
            name: "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            value: message.author.id
          }
        ]
      }
    };

    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      var supportbug_embed = {
        embed: {
          color: 0xff0055,

          author: {
            name: "–°–ª—É–∂–±–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ XStep",
            icon_url: client.user.avatarURL()
          },
          description:
            "‚ùì –ü–æ–∫–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ 5 –º–∏–Ω—É—Ç, –ø–æ–∫–∞ –í–∞—Å –ø—Ä–æ–≤–µ—Ä—è—Ç, –≤–¥—Ä—É–≥ –ª–∏ —Ç–≤–∏–Ω–∫–∏ –∏–ª–∏ —Ä–µ–π–¥–µ—Ä—ã. –ï—Å–ª–∏ –ø—è—Ç—å –º–∏–Ω—É—Ç —É–∂–µ –ø—Ä–æ—à–ª–æ, —Ä–æ–ª—å Newbie –≤—ã–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
        }
      };
      message.channel.send(supportbug_embed);

      var timerId = setInterval(function addAutoRole() {}, 300000);
      let str = "<@484921597015359488>"; //Just assuming some random tag.

      //removing any sign of < @ ! >...
      //the exclamation symbol comes if the user has a nickname on the server.
      let id = str.replace(/[<@!>]/g, "");

      client.users.fetch(id).then(user => {
        user.send(reportmsg_embed);
      });
    }
  }
});

client.on("message", async message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content === prefix + "help" ||
    message.content === prefix_a + "help" ||
    message.content === prefix_b + "help" ||
    message.content.startsWith === prefix_c + "help"
  ) {
    var t_log = {
      embed: {
        color: 0x007700,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      if (message.author.id === "484921597015359488") {
        var help_p1_embed = {
          embed: {
            color: 0x008be9,

            author: {
              name: client.user.username,
              icon_url: client.user.avatarURL()
            },
            description:
              "–ü—Ä–µ—Ñ–∏–∫—Å: `xs.` `xs!` `—Ö—Å.` `—Ö—Å!`. –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∏—à–∏—Ç–µ `<–ø—Ä–µ—Ñ–∏–∫—Å><–∏–º—è –∫–æ–º–∞–Ω–¥—ã>`",
            fields: [
              {
                name: "‚ùì –°–ø—Ä–∞–≤–∫–∞",
                value:
                  "`about` - –æ –±–æ—Ç–µ XStep\r\n`report <–æ–ø–∏—Å–∞–Ω–∏–µ –∂–∞–ª–æ–±—ã>` - –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è\r\n`donate` - –ø–æ–º–æ—á—å –ø—Ä–æ–µ–∫—Ç—É\r\n`links` - —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã"
              },
              {
                name: ":tools: –û–ø—Ü–∏–∏",
                value:
                  "`health` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞\r\n`srvlist` - —Å–ø–∏—Å–æ–∫ –≤—Ö–æ–¥—è—â–∏–π —Å–µ—Ä–≤–µ—Ä–æ–≤ –±–æ—Ç–∞\r\n`goals` - —Ü–µ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞"
              },
              {
                name: ":hammer: –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                value:
                  "`prune <–∫–æ–ª-–≤–æ>` - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\r\n`ban` - –∑–∞–±–∞–Ω–∏—Ç—å –∫–æ–≥–æ-—Ç–æ\r\n`kick` - –≤—ã–≥–Ω–∞—Ç—å –∫–æ–≥–æ-—Ç–æ\r\n`warn` - –≤—ã–¥–∞—Ç—å –∫–æ–º—É-—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\r\n`avatar` - –º–æ–π –∞–≤–∞—Ç–∞—Ä\r\n`user` - –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\r\n`server` - –æ —Å–µ—Ä–≤–µ—Ä–µ"
              }
            ],
            image: {
              url:
                "https://media.discordapp.net/attachments/634674458770276371/718695013529157664/cover_1.png?width=962&height=163"
            },
            footer: {
              text:
                "–í–µ—Ä—Å–∏—è " +
                botconfig.version +
                " (" +
                botconfig.date +
                ") | –°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑ 2"
            }
          }
        };
        var help_p2_embed = {
          embed: {
            color: 0x008be9,

            author: {
              name: client.user.username,
              icon_url: client.user.avatarURL()
            },
            description:
              "–ü—Ä–µ—Ñ–∏–∫—Å: `xs.` `xs!` `—Ö—Å.` `—Ö—Å!`. –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∏—à–∏—Ç–µ `<–ø—Ä–µ—Ñ–∏–∫—Å><–∏–º—è –∫–æ–º–∞–Ω–¥—ã>`",
            fields: [
              {
                name: "üë¨ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
                value:
                  '`8ball <–≤–æ–ø—Ä–æ—Å>` - –∏–≥—Ä–∞ "–®–∞—Ä —Å—É–¥—å–±—ã"\n`ghf` - –∑–æ–ª–æ—Ç–æ–π —Ñ–æ–Ω–¥ —é–º–æ—Ä–∞\n`yearprogress` - –≥–æ–¥–æ–≤–∞—è –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å\n`meme` - —Ä–∞–Ω–¥–æ–º–Ω—ã–µ –º–µ–º—ã\n`photo` - –º–∏—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n`randemoji` - —Ä–∞–Ω–¥–æ–º–Ω—ã–µ —ç–º–æ–¥–∂–∏\r\n`say` - —Å–∫–∞–∑–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞'
              },
              {
                name: "üéµ –ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                value:
                  "`audio play <—Å—Å—ã–ª–∫–∞>` - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞\r\n`audio stop` - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–∫–∞ –∏ –≤—ã—Ö–æ–¥ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"
              },
              {
                name: "–î—Ä—É–≥–æ–µ",
                value:
                  "`reverse <—Ç–µ–∫—Å—Ç>` - —Ä–µ–≤–µ—Ä—Å\r\n`binary <—Ç–µ–∫—Å—Ç>` - –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –¥–≤–æ–∏—á–Ω—ã–π –∫–æ–¥"
              }
            ],
            image: {
              url:
                "https://media.discordapp.net/attachments/634674458770276371/718695013529157664/cover_1.png?width=962&height=163"
            },
            footer: {
              text:
                "–í–µ—Ä—Å–∏—è " +
                botconfig.version +
                " (" +
                botconfig.date +
                ") | –°—Ç—Ä–∞–Ω–∏—Ü–∞ 2 –∏–∑ 2"
            }
          }
        };
      } else {
        var help_p1_embed = {
          embed: {
            color: 0x008be9,

            author: {
              name: client.user.username,
              icon_url: client.user.avatarURL()
            },
            description:
              "–ü—Ä–µ—Ñ–∏–∫—Å: `xs.` `xs!` `—Ö—Å.` `—Ö—Å!`. –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∏—à–∏—Ç–µ `<–ø—Ä–µ—Ñ–∏–∫—Å><–∏–º—è –∫–æ–º–∞–Ω–¥—ã>`",
            fields: [
              {
                name: "‚ùì –°–ø—Ä–∞–≤–∫–∞",
                value:
                  "`about` - –æ –±–æ—Ç–µ XStep\r\n`report <–æ–ø–∏—Å–∞–Ω–∏–µ –∂–∞–ª–æ–±—ã>` - –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è\r\n`donate` - –ø–æ–º–æ—á—å –ø—Ä–æ–µ–∫—Ç—É\r\n`links` - —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã",
              },
              {
                name: ":tools: –û–ø—Ü–∏–∏",
                value:
                  "`health` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞\r\n`srvlist` - —Å–ø–∏—Å–æ–∫ –≤—Ö–æ–¥—è—â–∏–π —Å–µ—Ä–≤–µ—Ä–æ–≤ –±–æ—Ç–∞\r\n`goals` - —Ü–µ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞"
              },
              {
                name: ":hammer: –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                value:
                  "`prune <–∫–æ–ª-–≤–æ>` - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\r\n`ban` - –∑–∞–±–∞–Ω–∏—Ç—å –∫–æ–≥–æ-—Ç–æ\r\n`kick` - –≤—ã–≥–Ω–∞—Ç—å –∫–æ–≥–æ-—Ç–æ\r\n`warn` - –≤—ã–¥–∞—Ç—å –∫–æ–º—É-—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\r\n`avatar` - –º–æ–π –∞–≤–∞—Ç–∞—Ä\r\n`user` - –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\r\n`server` - –æ —Å–µ—Ä–≤–µ—Ä–µ"
              }
            ],
            image: {
              url:
                "https://media.discordapp.net/attachments/634674458770276371/718695013529157664/cover_1.png?width=962&height=163"
            },
            footer: {
              text:
                "–í–µ—Ä—Å–∏—è " +
                botconfig.version +
                " (" +
                botconfig.date +
                ") | –°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑ 2"
            }
          }
        };
        var help_p2_embed = {
          embed: {
            color: 0x008be9,

            author: {
              name: client.user.username,
              icon_url: client.user.avatarURL()
            },
            description:
              "–ü—Ä–µ—Ñ–∏–∫—Å: `xs.` `xs!` `—Ö—Å.` `—Ö—Å!`. –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∏—à–∏—Ç–µ `<–ø—Ä–µ—Ñ–∏–∫—Å><–∏–º—è –∫–æ–º–∞–Ω–¥—ã>`",
            fields: [
              {
                name: "üë¨ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
                value:
                  '`8ball <–≤–æ–ø—Ä–æ—Å>` - –∏–≥—Ä–∞ "–®–∞—Ä —Å—É–¥—å–±—ã"\n`ghf` - –∑–æ–ª–æ—Ç–æ–π —Ñ–æ–Ω–¥ —é–º–æ—Ä–∞\n`yearprogress` - –≥–æ–¥–æ–≤–∞—è –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å\n`meme` - —Ä–∞–Ω–¥–æ–º–Ω—ã–µ –º–µ–º—ã\n`photo` - –º–∏—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n`randemoji` - —Ä–∞–Ω–¥–æ–º–Ω—ã–µ —ç–º–æ–¥–∂–∏\r\n`say` - —Å–∫–∞–∑–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞'
              },
              {
                name: "üéµ –ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                value:
                  "`audio play <—Å—Å—ã–ª–∫–∞ –∏–ª–∏ –ø–æ–∏—Å–∫–æ–≤–æ–π –∑–∞–ø—Ä–æ—Å>` - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞\r\n`audio stop` - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–∫–∞ –∏ –≤—ã—Ö–æ–¥ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"
              },
              {
                name: "–î—Ä—É–≥–æ–µ",
                value:
                  "`reverse <—Ç–µ–∫—Å—Ç>` - —Ä–µ–≤–µ—Ä—Å\r\n`binary <—Ç–µ–∫—Å—Ç>` - –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –¥–≤–æ–∏—á–Ω—ã–π –∫–æ–¥"
              }
            ],
            image: {
              url:
                "https://media.discordapp.net/attachments/634674458770276371/718695013529157664/cover_1.png?width=962&height=163"
            },
            footer: {
              text:
                "–í–µ—Ä—Å–∏—è " +
                botconfig.version +
                " (" +
                botconfig.date +
                ") | –°—Ç—Ä–∞–Ω–∏—Ü–∞ 2 –∏–∑ 2"
            }
          }
        };
      }
    }
    client.channels.cache.get("564022728143929370").send(t_log);
    let hlp_m = await message.channel.send(help_p1_embed);
    await hlp_m.react("1Ô∏è‚É£");
    await hlp_m.react("2Ô∏è‚É£");
    const collector = hlp_m.createReactionCollector(
      (reaction, user) =>
        reaction.emoji.name === "1Ô∏è‚É£" ||
        (reaction.emoji.name === "2Ô∏è‚É£" && user.id == message.author.id),
      { time: 40000 }
    );
    collector.on("collect", async r => {
      switch (r.emoji.name) {
        case "1Ô∏è‚É£":
          await hlp_m.edit(help_p1_embed);
          break;
        case "2Ô∏è‚É£":
          await hlp_m.edit(help_p2_embed);
          break;
      }
    });
  }
});

client.on("message", async function(message) {
  if (
    message.content.startsWith(prefix + "prune") ||
    message.content.startsWith(prefix_a + "prune") ||
    message.content.startsWith(prefix_b + "prune") ||
    message.content.startsWith(prefix_c + "prune")
  ) {
    if (message.channel.type === "dm") return;
    var t_log = {
      embed: {
        color: 0xff3333,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      let args = message.content.split(" ").slice(1);
      var deletemsg_embed = {
        embed: {
          color: 0xff3333,

          author: {
            name: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
            icon_url: client.user.avatarURL()
          },
          description: ":hourglass_flowing_sand: –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π..."
        }
      };

      var delmsgerr_o_embed = {
        embed: {
          color: 0xff3333,

          author: {
            name: "–í–Ω–∏–º–∞–Ω–∏–µ!",
            icon_url: client.user.avatarURL()
          },
          description:
            "‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ—Å–ª–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –ª—é–±–æ–µ —á–∏—Å–ª–æ –æ—Ç 2 –¥–æ 100 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."
        }
      };

      var delmsgerr_t_embed = {
        embed: {
          color: 0xff0000,

          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ—Å–∫–æ–ª—å–∫—É –í—ã –∏–ª–∏ –±–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏."
        }
      };

      const deleteCount = parseInt(args[0], 10) + 2;

      // Ooooh nice, combined conditions. <3
      if (!deleteCount || deleteCount < 4 || deleteCount > 100)
        return message.channel.send(delmsgerr_o_embed);

      // So we get our messages, and delete them. Simple enough, right?
      let delmsg = await message.channel.send(deletemsg_embed);
      const fetched = message.channel.messages
        .fetch({ limit: deleteCount })
        .then(
          function(fetched) {
            message.channel.bulkDelete(fetched);
          },
          function(err) {
            message.channel.send(delmsgerr_t_embed);
          }
        );
    }
  }
});

client.on("message", async function(message) {
  if (
    message.content.startsWith(prefix + "reverse") ||
    message.content.startsWith(prefix_a + "reverse") ||
    message.content.startsWith(prefix_b + "reverse") ||
    message.content.startsWith(prefix_c + "reverse")
  ) {
    if (message.channel.type === "dm") return;
            var msg_array = message.content.split(" ").slice(11);

        var msg_string = message.content.split("").slice(11);
        var reverse_string = "";
        var word;
        var split_word;
        for (var i = msg_string.length - 1; i >= 0; i -= 1) {

            reverse_string += msg_string[i];
        }
          var reverse_embed = {
        embed: {
          color: 0x00c289,

          author: {
            name: "–†–µ–≤–µ—Ä—Å",
            icon_url: client.user.avatarURL()
          },
          description: (reverse_string || "<@" + message.author.id + ">, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ."),
        }
      };
        message.channel.send(reverse_embed);


        function getRandomNumber(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }
  }
});

client.on("message", async function(message) {
  if (
    message.content.startsWith(prefix + "binary") ||
    message.content.startsWith(prefix_a + "binary") ||
    message.content.startsWith(prefix_b + "binary") ||
    message.content.startsWith(prefix_c + "binary")
  ) {
    if (message.channel.type === "dm") return;
        var colour_array = ["1211996", "3447003", "13089792", "16711858", "1088163", "16098851", "6150962"]
        var randomNumber = getRandomNumber(0, colour_array.length - 1);
        var randomColour = colour_array[randomNumber];
        var alphabet = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
                        "–∞", "–±", "–≤", "–≥", "–¥", "–µ", "—ë", "–∂", "–∑", "–∏", "–π", "–∫", "–ª", "–º", "–Ω", "–æ", "–ø", "—Ä", "—Å", "—Ç", "—É", "—Ñ", "—Ö", "—Ü", "—á", "—à", "—â", "—ä", "—ã", "—å", "—ç", "—é", "—è", "–ê", "–ë", "–í", "–ì", "–î", "–ï", "–Å", "–ñ", "–ó", "–ò", "–ô", "–ö", "–õ", "–ú", "–ù", "–û", "–ü", "–†", "–°",
                        "–¢", "–£", "–§", "–•", "–¶", "–ß", "–®", "–©", "–™", "–´", "–¨", "–≠", "–Æ", "–Ø", "?", ",", "!", ".", " ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"];

        var fmt_array = message.content.split("").slice(10);

        var binaryMessage = translateMessage(fmt_array, "binary", alphabet)
        console.log(binaryMessage)
          var binary_embed = {
        embed: {
          color: 0x00c289,

          author: {
            name: "–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –¥–≤–æ–∏—á–Ω—ã–π –∫–æ–¥",
            icon_url: client.user.avatarURL()
          },
          description: "```" + binaryMessage + "```",
        }
      };
      message.channel.send(binary_embed)

        function getRandomNumber(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }

        function translateMessage(fmt_array, fontList, alphabet) {
            var convertedFontMessage = "";
            var translatedLetter = "";
        
            // EXTRACTING THE APPROPRIATE CHARACTER LIST.
            var font_cmds_object = require('./JSON/font_lists.json');
            var characterList = font_cmds_object[fontList];
        
            for (var i = 0; i < fmt_array.length; i += 1) {
                var letter = fmt_array[i];
        
                if (alphabet.indexOf(letter) >= 0) {
                    translatedLetter = characterList[letter] // Need the list where the converted characters are.
                }
                else {
                    translatedLetter = letter
                }
                convertedFontMessage += translatedLetter;
            }
            console.log(`Before: ${fmt_array} After: ${convertedFontMessage}`);
            return convertedFontMessage;
        
        }
  }
});

client.on("message", message => {
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "avatar") ||
    message.content.startsWith(prefix_a + "avatar") ||
    message.content.startsWith(prefix_b + "avatar") ||
    message.content.startsWith(prefix_c + "avatar")
  ) {
    var t_log = {
      embed: {
        color: 0xff8800,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };

    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      var myavatar_embed = {
        embed: {
          color: 0xff3333,

          author: {
            name: "–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + message.author.tag,
            icon_url: client.user.avatarURL()
          },
          image: {
            url: message.author.avatarURL()
          }
        }
      };
      message.channel.send(myavatar_embed);
    }
  }
});

client.on("message", message => {
  if (!message.guild) return;
  if (
    message.content.startsWith(prefix + "kick") ||
    message.content.startsWith(prefix_a + "kick") ||
    message.content.startsWith(prefix_b + "kick") ||
    message.content.startsWith(prefix_c + "kick")
  ) {
    if (message.channel.type === "dm") return;
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      const user1 = message.mentions.users.first();
      const member = message.guild.member(user1);
      var kickerr1_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –±–æ—Ç/–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
        }
      };
      var kickerr2_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –≤ –í–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –ª–∏–±–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –í–∞—à —Å–µ—Ä–≤–µ—Ä."
        }
      };
      var kickerr3_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ `xs.kick <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ>`"
        }
      };
      var kickerr4_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description: "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑."
        }
      };
      if (user1) {
        if (message.member.hasPermission("ADMINISTRATOR")) {
          if (member) {
            var kick_log = {
              embed: {
                color: 0xff8800,
                author: {
                  name: message.author.tag,
                  icon_url: client.user.avatarURL()
                },
                description:
                  user1.tag +
                  " kicked by user " +
                  message.author.tag +
                  " on **" +
                  message.guild.name +
                  "**",
                fields: [
                  {
                    name: "Server ID",
                    value: message.guild.id
                  },
                  {
                    name: "Channel ID",
                    value: message.channel.id
                  },
                  {
                    name: "User ID",
                    value: message.author.id
                  }
                ]
              }
            };
            var kicksucc_embed = {
              embed: {
                color: 0xff0000,
                author: {
                  name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + user1.tag,
                  icon_url: client.user.avatarURL()
                },
                fields: [
                  {
                    name: "üö™ –ö–∏–∫–Ω—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                    value: message.author.tag
                  }
                ]
              }
            };
            client.channels.cache.get("564022728143929370").send(kick_log);
            member
              .kick("Optional reason that will display in the audit logs")
              .then(() => {
                message.channel.send(kicksucc_embed);
              })
              .catch(err => {
                message.channel.send(kickerr4_embed);
                console.error(err);
              });
          } else {
            message.channel.send(kickerr2_embed);
          }
        } else {
          message.channel.send(kickerr1_embed);
        }
      } else {
        message.channel.send(kickerr3_embed);
      }
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (message.content.startsWith(prefix + "reset")) {
    message.channel
      .send("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...")
      .then(msg => client.destroy())
      .then(() => client.login(botconfig.token));
  }
});

// Turn bot off (destroy), then turn it back on
function resetBot(channel) {
  // send channel a message that you're resetting bot [optional]
}

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "links") ||
    message.content.startsWith(prefix_a + "links") ||
    message.content.startsWith(prefix_b + "links") ||
    message.content.startsWith(prefix_c + "links")
  ) {
    var t_log = {
      embed: {
        color: 0x2255ff,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      var links_embed = {
        embed: {
          color: 0xaa88ff,
          author: {
            name: "–°—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã",
            icon_url: client.user.avatarURL()
          },
          description: "[Discord-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—â–µ–Ω–∏—è](https://discord.gg/9husXQy)\n[YouTube-–∫–∞–Ω–∞–ª](https://youtube.com/DMITPlus)\n[–í–ö–æ–Ω—Ç–∞–∫—Ç–µ](https://vk.com/dmitcompgroup)\n[Twitter](https://twitter.com/dmitcomputers)\n[Telegram](https://t.me/dmitcomp)\n[TikTok](https://tiktok.com/@dmitcomputers)\n\n[–ò—Å—Ö–æ–¥–Ω—ã–µ –∫–æ–¥—ã –±–æ—Ç–∞ XStep](https://github.com/dmitryevdev/XStepBot)\n[–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –±–æ—Ç–∞](https://discordapp.com/oauth2/authorize?client_id=634271325057318943&permissions=8&scope=bot)",
        }
      };
      message.channel.send(links_embed);
    }
  }
});
function getResultRps(me, clientChosen) {
  if (
    (me === "üóª" && clientChosen === "‚úÇ") ||
    (me === "üì∞" && clientChosen === "üóª") ||
    (me === "‚úÇ" && clientChosen === "üì∞")
  ) {
    return "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!";
  } else if (me === clientChosen) {
    return "–ù–∏—á—å—è!";
  } else {
    return "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.";
  }
}

client.on("message", message => {
  if (message.author === client.user) return;
  if (
    message.content.startsWith(prefix + "photo") ||
    message.content.startsWith(prefix_a + "photo") ||
    message.content.startsWith(prefix_b + "photo") ||
    message.content.startsWith(prefix_c + "photo")
  ) {
    var t_log = {
      embed: {
        color: 0xff8800,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };

    client.channels.cache.get("564022728143929370").send(t_log);
    // In this array,
    // you can put the subreddits you want to grab memes from
    const subReddits = ["pic", "analog"];
    // Grab a random property from the array
    const random = subReddits[Math.floor(Math.random() * subReddits.length)];

    // Get a random image from the subreddit page
    const imgaddr = async function(a, b) {
      await randomPuppy(random).then(url => {
        var meme_embed = {
          embed: {
            color: 0x3399cc,
            author: {
              name: "–ú–∏—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π",
              icon_url: client.user.avatarURL()
            },
            image: {
              url: url
            },
            footer: {
              text: "–ò—Å—Ç–æ—á–Ω–∏–∫: https://reddit.com/r/" + random
            }
          }
        };
        message.channel.send(meme_embed);
      });
    };
    imgaddr();

    client.channels.cache.get("564022728143929370").send(t_log);
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (
    message.content.startsWith(prefix + "meme") ||
    message.content.startsWith(prefix_a + "meme") ||
    message.content.startsWith(prefix_b + "meme") ||
    message.content.startsWith(prefix_c + "meme")
  ) {
    var t_log = {
      embed: {
        color: 0xff8800,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };

    client.channels.cache.get("564022728143929370").send(t_log);
    // In this array,
    // you can put the subreddits you want to grab memes from
    const subReddits = ["dankmeme", "meme", "me_irl"];
    // Grab a random property from the array
    const random = subReddits[Math.floor(Math.random() * subReddits.length)];

    // Get a random image from the subreddit page
    const imgaddr = async function(a, b) {
      await randomPuppy(random).then(url => {
        var meme_embed = {
          embed: {
            color: 0x3399cc,
            author: {
              name: "–†–∞–Ω–¥–æ–º–Ω—ã–µ –º–µ–º—ã",
              icon_url: client.user.avatarURL()
            },
            image: {
              url: url
            },
            footer: {
              text: "–ò—Å—Ç–æ—á–Ω–∏–∫: https://reddit.com/r/" + random
            }
          }
        };
        message.channel.send(meme_embed);
      });
    };
    imgaddr();

    client.channels.cache.get("564022728143929370").send(t_log);
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.content.startsWith(prefix + "eval")) {
    let args = message.content.split(" ").slice(1);
    if (
      message.author.id !== "484921597015359488" &&
      message.author.id !== "708682885342691428"
    )
      return;
    try {
      var code = args.join(" ");
      var evaled = eval(code);

      if (typeof evaled !== "string") evaled = require("util").inspect(evaled);

      var evalresult_embed = {
        embed: {
          color: 0xaa88ff,
          author: {
            name: "–û—Ç–ª–∞–¥—á–∏–∫",
            icon_url: client.user.avatarURL()
          },
          fields: [
            {
              name: "–õ–∏—Å—Ç–∏–Ω–≥",
              value: "```" + message.content.split(" ").slice(1) + "```"
            },
            {
              name: "–†–µ–∑—É–ª—å—Ç–∞—Ç",
              value: "```js\n" + clean(evaled) + "```"
            }
          ],
          footer: {
            text:
              '–ö–æ–º–∞–Ω–¥–∞ "eval" –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.'
          }
        }
      };

      message.channel.send(evalresult_embed);
    } catch (err) {
      var evalerr_embed = {
        embed: {
          color: 0xaa88ff,
          author: {
            name: "–û—Ç–ª–∞–¥—á–∏–∫",
            icon_url: client.user.avatarURL()
          },
          fields: [
            {
              name: "–õ–∏—Å—Ç–∏–Ω–≥",
              value: "```" + message.content.split(" ").slice(1) + "```"
            },
            {
              name: "–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏",
              value: "```js\n" + clean(err) + "```"
            }
          ],
          footer: {
            text:
              '–ö–æ–º–∞–Ω–¥–∞ "eval" –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.'
          }
        }
      };
      message.channel.send(evalerr_embed);
    }
  }
});

function clean(text) {
  if (typeof text === "string")
    return text
      .replace(/`/g, "`" + String.fromCharCode(8203))
      .replace(/@/g, "@" + String.fromCharCode(8203));
  else return text;
}

client.on("message", message => {
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "ads +") ||
    message.content.startsWith(prefix_a + "ads +") ||
    message.content.startsWith(prefix_b + "ads +") ||
    message.content.startsWith(prefix_c + "ads +")
  ) {
    var t_log = {
      embed: {
        color: 0xffff00,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (message.author.id === "484921597015359488") {
      let args = message.content.split(" + ").slice(1);
      client.channels.cache
        .get("543748248012193792")
        .send(args.join(" "))
        .catch(console.error);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      var ads_err_embed = {
        embed: {
          color: 0xff0000,
          author: {
            name: "–û—à–∏–±–∫–∞",
            icon_url: client.user.avatarURL()
          },
          description:
            "üö´ –ö–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ, –µ—Å–ª–∏ –í—ã —Å–¥–µ–ª–∞–µ—Ç–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ.\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: `xs.donate` + –≤–≤–æ–¥."
        }
      };
      message.channel.send(ads_err_embed);
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "8ball") ||
    message.content.startsWith(prefix_a + "8ball") ||
    message.content.startsWith(prefix_b + "8ball") ||
    message.content.startsWith(prefix_c + "8ball")
  ) {
    var t_log = {
      embed: {
        color: 0x2200ff,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      let answers = [
        "–î–∞.",
        "–ù–µ—Ç.",
        "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ.",
        "–ë–µ–∑—É—Å–ª–æ–≤–Ω–æ.",
        "–°–æ–≥–ª–∞—Å–µ–Ω.",
        "–í–æ–∑–º–æ–∂–Ω–æ.",
        "–ö–æ–Ω–µ—á–Ω–æ.",
        "–ù–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å",
        "–ü–æ—Ö–æ–∂–µ, –í—ã –∑–∞–¥–∞–µ—Ç–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.",
        "C–æ–º–Ω–µ–≤–∞—é—Å—å.",
        "–≠—Ç–æ –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ.",
        "–ù–µ –∑–Ω–∞—é, –∫–∞–∫ –≤—ã, –Ω–æ —è —Å–∫–∞–∂—É, —á—Ç–æ –Ω–µ—Ç.",
        "–î–∞ –∏–ª–∏ –Ω–µ—Ç? –¢–æ, —á—Ç–æ –≤—ã –∑–∞–¥–∞–µ—Ç–µ, —ç—Ç–æ —Å–ª–æ–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å."
      ]; //–º–∞—Å—Å–∏–≤ –æ—Ç–≤–µ—Ç–æ–≤
      let rand = Math.floor(Math.random() * answers.length);
      var eightball_embed = {
        embed: {
          color: 0xaa88ff,
          author: {
            name: "–®–∞—Ä —Å—É–¥—å–±—ã",
            icon_url: client.user.avatarURL()
          },
          fields: [
            {
              name: "üí¨ –û—Ç–≤–µ—Ç",
              value: answers[rand]
            }
          ]
        }
      };
      message.channel.send(eightball_embed);
      let str = "<@461516811855200256>"; //Just assuming some random tag.

      //removing any sign of < @ ! >...
      //the exclamation symbol comes if the user has a nickname on the server.
      let id = str.replace(/[<@!>]/g, "");

      client.users.fetch(id).then(user => {
        user.send(
          message.author.id +
            " –∏–ª–∏ " +
            message.author.tag +
            ' —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É "–®–∞—Ä–∞ —Å—É–¥—å–±—ã" —Ç–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å: ' +
            message.content
        );
      });
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "yearprogress") ||
    message.content.startsWith(prefix_a + "yearprogress") ||
    message.content.startsWith(prefix_b + "yearprogress") ||
    message.content.startsWith(prefix_c + "yearprogress")
  ) {
    var t_log = {
      embed: {
        color: 0x2200ff,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      var moscow = new Date();
      moscow.getDate();
      var d0 = new Date("January 1, " + moscow.getFullYear());
      var d1 = moscow;
      var d2 = new Date(moscow.getFullYear(), moscow.getMonth(), 32);
      var d3 = 32 - d2.getDate();
      var d4 = ((d1.getDate() - 1 + d1.getHours() / 24) / (d3 / 100)).toFixed(
        1
      );
      var d5 = ((d1.getDay() + d1.getHours() / 24) / 0.07).toFixed(1);
      var d6 = ((d1.getHours() + d1.getMinutes() / 60) / 0.24).toFixed(1);
      var d1 = moscow;
      var daysCount = String(
        Math.round((d1.getTime() - d0.getTime()) / (1000 * 60 * 60 * 24))
      );
      var yearPercents = String(
        (
          Math.round(
            Math.round((d1.getTime() - d0.getTime()) / (1000 * 60 * 60 * 24))
          ) / 3.65
        ).toFixed(1)
      );
      var yearprogress_embed = {
        embed: {
          color: 0xaa88ff,
          author: {
            name: "üìÖ –ì–æ–¥–æ–≤–∞—è –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å",
            icon_url: client.user.avatarURL()
          },
          fields: [
            {
              name: "–ì–æ–¥",
              value: "–ü—Ä–æ—à–ª–æ " + daysCount + " –¥–Ω. / " + yearPercents + "%"
            },
            {
              name: "–ú–µ—Å—è—Ü",
              value: "–ü—Ä–æ—à–ª–æ " + moscow.getDate() + " –¥–Ω. / " + String(d4) + "%"
            },
            {
              name: "–ù–µ–¥–µ–ª—è",
              value:
                "–ü—Ä–æ—à–ª–æ " +
                String(moscow.getDay()) +
                " –¥–Ω. / " +
                String(d5) +
                "%"
            },
            {
              name: "–î–µ–Ω—å",
              value:
                strftime("%H:%M", new Date(moscow)) +
                " (UTC+7) / " +
                String(d6) +
                "%"
            }
          ],
          footer: {
            text: "–°–µ–≥–æ–¥–Ω—è " + strftime("%d.%m.%Y", new Date())
          }
        }
      };
      message.channel.send(yearprogress_embed);
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "channel") ||
    message.content.startsWith(prefix_a + "channel") ||
    message.content.startsWith(prefix_b + "channel") ||
    message.content.startsWith(prefix_c + "channel")
  ) {
    var t_log = {
      embed: {
        color: 0x2200ff,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      var parentes = "";
      var topic = "";
      var nsfwwarn = "";
      if (!message.channel.topic) {
        topic = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
      } else {
        topic = message.channel.topic;
      }
      if (!message.channel.parent) {
        parentes = "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏";
      } else {
        parentes = message.channel.parent;
      }
      if (message.channel.nsfw == !true) {
        nsfwwarn = "";
      } else {
        nsfwwarn = "üîû **–ù–∞ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç 18+. –¢–∞–∫ —á—Ç–æ, –ø–æ–æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ.**";
      }

      var ci_info = {
        embed: {
          color: 0x7b50ff,
          author: {
            name: '–û —Ç–µ–∫—Å—Ç–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ "' + message.channel.name + '"',
            icon_url: client.user.avatarURL()
          },
          description: nsfwwarn,
          fields: [
            {
              name: "ID",
              value: message.channel.id
            },
            {
              name: "üìÑ –û–ø–∏—Å–∞–Ω–∏–µ",
              value: topic
            },
            {
              name: "üå≥ –ö–∞—Ç–µ–≥–æ—Ä–∏—è",
              value: parentes
            }
          ],
          footer: {
            text:
              "–¢–µ–∫—Å—Ç–æ–≤–æ–π –∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω " +
              strftime(
                "%d.%m.%Y –≤ %H:%M –ú–°–ö",
                new Date(
                  new Date(message.channel.createdTimestamp).toLocaleString(
                    "en-US",
                    { timeZone: "Europe/Moscow" }
                  )
                )
              )
          }
        }
      };
      message.channel.send(ci_info);
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (
    message.content.startsWith(prefix + "server") ||
    message.content.startsWith(prefix_a + "server") ||
    message.content.startsWith(prefix_b + "server") ||
    message.content.startsWith(prefix_c + "server")
  ) {
    var t_log = {
      embed: {
        color: 0x3333ff,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (message.channel.type === "dm") return;
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      let afkCh = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
      if (message.guild.afkChannel && message.guild.afkChannel.name) {
        afkCh =
          message.guild.afkChannel.name + " (" + message.guild.afkTimeout + " —Å.)";
      } else {
        afkCh = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
      }
      client.channels.cache.get("564022728143929370").send(t_log);
      let verifLvl = "";
      if(message.guild.verificationLevel === "NONE") {
      verifLvl = "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"
      }
      if(message.guild.verificationLevel === "LOW") {
      verifLvl = "–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (1-—è —Å—Ç–µ–ø–µ–Ω—å)"
      }	    
      if(message.guild.verificationLevel === "MEDIUM") {
      verifLvl = "–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (2-—è —Å—Ç–µ–ø–µ–Ω—å)"
      }	    
      if(message.guild.verificationLevel === "HIGH") {
      verifLvl = "–ñ–µ—Å—Ç–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (3-—è —Å—Ç–µ–ø–µ–Ω—å)"
      }	    
      if(message.guild.verificationLevel === "VERY_HIGH") {
      verifLvl = "–°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (4-—è —Å—Ç–µ–ø–µ–Ω—å)"
      }	    
      message.guild.region =
        message.guild.region[0].toUpperCase() + message.guild.region.slice(1);
      var si_info = {
        embed: {
          color: 0x7b50ff,
          author: {
            name: '–û —Å–µ—Ä–≤–µ—Ä–µ "' + message.guild.name + '"',
            icon_url: client.user.avatarURL()
          },
          thumbnail: {
            url: message.guild.iconURL()
          },
          fields: [
            {
              name: "ID",
              value: message.guild.id
            },
            {
              name: "üëë –í–ª–∞–¥–µ–ª–µ—Ü",
              value:
                message.guild.owner.user.tag +
                " (" +
                message.guild.owner.id +
                ")"
            },
            {
              name: "üè° –ö–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞",
              value:
                message.guild.channels.cache.size +
                " –∫–∞–Ω–∞–ª–æ–≤ | " +
                message.guild.roles.cache.size +
                " —Ä–æ–ª–µ–π | " +
                message.guild.memberCount +
                " —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ | " +
                message.guild.presences.cache.size +
                " –æ–Ω–ª–∞–π–Ω | " +
                message.guild.emojis.cache.size +
                " —ç–º–æ–¥–∂–∏"
            },
            {
              name: "üîï AFK-–∫–∞–Ω–∞–ª",
              value: afkCh
            },
            {
              name: "üèô –†–µ–≥–∏–æ–Ω/–°—Ç—Ä–∞–Ω–∞",
              value: message.guild.region
            },
            {
              name: "üõ† –°—Ç–µ–ø–µ–Ω—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
              value: (verifLvl || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            }
          ],
          footer: {
            text:
              "–°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω " +
              strftime(
                "%d.%m.%Y –≤ %H:%M –ú–°–ö",
                new Date(
                  new Date(message.guild.createdTimestamp).toLocaleString(
                    "en-US",
                    { timeZone: "Europe/Moscow" }
                  )
                )
              )
          }
        }
      };
      message.channel.send(si_info);
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (
    message.content.startsWith(prefix + "user") ||
    message.content.startsWith(prefix_a + "user") ||
    message.content.startsWith(prefix_b + "user") ||
    message.content.startsWith(prefix_c + "user")
  ) {
    var t_log = {
      embed: {
        color: 0x3333ff,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (message.channel.type === "dm") return;
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      let args = message.content.split(" ").slice(1);
      let search_un = client.users.cache.find(user => user.username == args);
      let member = message.guild.member(
        search_un ||
          message.mentions.users.first() ||
          message.guild.members.cache.get(args[0])
      );
      let argsUser = message.guild.member.user || message.author;
      if (message.guild.member(args[0])) {
        argsUser = message.guild.member(args[0]).user;
      } else {
        if (member) {
          argsUser = member.user;
        } else {
          argsUser = message.author;
        }
      }
      let statuses = {
        online: "–û–Ω–ª–∞–π–Ω",
        idle: "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω",
        dnd: "–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å",
        offline: "–û—Ñ—Ñ–ª–∞–π–Ω"
      };
      let game;
      if (!argsUser.presence.activities.type)
        game = `${statuses[argsUser.presence.status]}`;
      else if (argsUser.presence.activities.type == 0)
        game = `–ò–≥—Ä–∞–µ—Ç/–†–∞–±–æ—Ç–∞–µ—Ç –≤ **${argsUser.presence.activities.name}**`;
      else if (argsUser.presence.activities.type == 1)
        game = `–í–µ–¥–µ—Ç —Å—Ç—Ä–∏–º **${argsUser.presence.activities.name}**\n${argsUser.presence.activities.url}`;
      else if (argsUser.presence.activities.type == 2)
        game = `–°–ª—É—à–∞–µ—Ç –≤ Spotify ${argsUser.presence.activities.name}`;
      else if (argsUser.presence.activities.type == 3)
        game = `–°–º–æ—Ç—Ä–∏—Ç **${argsUser.presence.activities.name}**`;
      if (argsUser.nickname) {
        var nickname = argsUser.nickname;
      } else {
        var nickname = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
      }
      let day = 1000 * 60 * 60 * 24;
      let month = 30;
      let date1 = new Date(
        new Date().toLocaleString("en-US", { timeZone: "Europe/Moscow" })
      );
      let date2 = new Date(
        new Date(argsUser.createdTimestamp).toLocaleString("en-US", {
          timeZone: "Europe/Moscow"
        })
      );
      let date3 = new Date(
        new Date(message.guild.member(argsUser).joinedTimestamp).toLocaleString(
          "en-US",
          { timeZone: "Europe/Moscow" }
        )
      );
      if (
        Math.round(Math.abs((date1.getTime() - date3.getTime()) / day)) > 30 &&
        Math.round(Math.abs((date1.getTime() - date2.getTime()) / day)) > 30
      ) {
        let diff1 = ((date1.getTime() - date2.getTime()) / day / month).toFixed(
          1
        );
        let diff2 = ((date1.getTime() - date3.getTime()) / day / month).toFixed(
          1
        );
        var ui_info = {
          embed: {
            color: 0x7b50ff,
            author: {
              name: argsUser.bot
                ? '[Bot] –û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ "' + argsUser.tag + '"'
                : '–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ "' + argsUser.tag + '" ',
              icon_url: client.user.avatarURL()
            },
            thumbnail: {
              url: argsUser.avatarURL()
            },
            fields: [
              {
                name: "–û —Å–µ–±–µ",
                value:
                  "**ID:** " +
                  argsUser.id +
                  "\n**–°—Ç–∞—Ç—É—Å:** " +
                  (game || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å") +
                  "\n**–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** " +
                  strftime(
                    "%d.%m.%Y –≤ %H:%M –ú–°–ö",
                    new Date(
                      new Date(argsUser.createdTimestamp).toLocaleString(
                        "en-US",
                        { timeZone: "Europe/Moscow" }
                      )
                    )
                  ) +
                  " (~" +
                  diff1 +
                  " –º–µ—Å. –Ω–∞–∑–∞–¥)"
              },
              {
                name: "üîë –î–∞—Ç–∞ –≤—Ö–æ–¥–∞ –≤ —Å–µ—Ä–≤–µ—Ä",
                value:
                  strftime(
                    "%d.%m.%Y –≤ %H:%M –ú–°–ö",
                    new Date(new Date(message.guild.member(argsUser).joinedTimestamp).toLocaleString(
                        "en-US",
                        { timeZone: "Europe/Moscow" }
                      )
                  )) +
                  " (~" +
                  diff2 + " –º–µ—Å. –Ω–∞–∑–∞–¥)" },
              {
                name:
                  "üóí –†–æ–ª–∏ (" +
                  message.guild.member(argsUser).roles.cache.size +
                  ")",
                value:
                  message.guild
                    .member(argsUser)
                    .roles.cache.filter(r => r.id != message.guild.id)
                    .map(role => role.name)
                    .join(", ") || "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
              }
            ]
          }
        };
        message.channel.send(ui_info);
      } else {
        let diff1 = Math.abs((date1.getTime() - date2.getTime()) / day).toFixed(
          1
        );
        let diff2 = Math.abs((date1.getTime() - date3.getTime()) / day).toFixed(
          1
        );

        client.channels.cache.get("564022728143929370").send(t_log);
        var ui_info = {
          embed: {
            color: 0x7b50ff,
            author: {
              name: argsUser.bot
                ? '[Bot] –û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ "' + argsUser.tag + '"'
                : '–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ "' + argsUser.tag + '" ',
              icon_url: client.user.avatarURL()
            },
            thumbnail: {
              url: argsUser.avatarURL()
            },
            fields: [
              {
                name: "–û —Å–µ–±–µ",
                value:
                  "**ID:** " +
                  argsUser.id +
                  "\n**–°—Ç–∞—Ç—É—Å:** " +
                  (game || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å") +
                  "\n**–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** " +
                  strftime(
                    "%d.%m.%Y –≤ %H:%M –ú–°–ö",
                    new Date(new Date(argsUser.createdTimestamp).toLocaleString(
                        "en-US",
                        { timeZone: "Europe/Moscow" }
                      )
                  )) +
                  " (" +
                  diff1 +
                  " –¥–Ω. –Ω–∞–∑–∞–¥)"
              },
              {
                name: "üîë –î–∞—Ç–∞ –≤—Ö–æ–¥–∞ –≤ —Å–µ—Ä–≤–µ—Ä",
                value:
                  strftime(
                    "%d.%m.%Y –≤ %H:%M –ú–°–ö",
                    new Date(new Date(message.guild.member(argsUser).joinedTimestamp).toLocaleString(
                        "en-US",
                        { timeZone: "Europe/Moscow" }
                      )
                  )) +
                  " (" +
                  diff2 +
                  " –¥–Ω. –Ω–∞–∑–∞–¥)",
              },
              {
                name:
                  "üóí –†–æ–ª–∏ (" +
                  message.guild.member(argsUser).roles.cache.size +
                  ")",
                value:
                  message.guild
                    .member(argsUser)
                    .roles.cache.filter(r => r.id != message.guild.id)
                    .map(role => role.name)
                    .join(", ") || "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
              }
            ]
          }
        };
        message.channel.send(ui_info);
      }
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (message.content.startsWith(prefix + "say_private")) {
    if (message.author.id !== "484921597015359488") return;
    let args = message.content.split(" ").slice(1);
    const sayMessage = args.join(" ");
    message
      .delete()
      .catch(
        console.log(
          "\n\nError! I can not manage messages.\n\nReason\n" +
            message.author.tag +
            ": " +
            message.content
        )
      );
    // And we get the bot to say the thing:
    message.channel.send(sayMessage);
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (message.content.startsWith(prefix + "rules")) {
    if (message.author.id !== "484921597015359488") return;
    var rules_embed = {
      embed: {
        color: 0x87ff32,
        author: {
          name: "–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞ DMIT Computers Team"
        },
        description:
          "**‚ö†Ô∏è –ù–µ–∑–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –í–∞—Å –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏. –ü–æ—ç—Ç–æ–º—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (–≤–∞—Ä–Ω–æ–≤) –∏–ª–∏ –±–∞–Ω–æ–≤, –∏–∑—É—á–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞. –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Ç–∞–∫–∂–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –£—Å–ª–æ–≤–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Discord - https://discord.com/terms, —Ç–∞–∫ –∫–∞–∫ –≤—Ö–æ–¥ —Ä–∞–∑—Ä–µ—à–µ–Ω —Ç–æ–ª—å–∫–æ –ª–∏—Ü–∞–º —Å—Ç–∞—Ä—à–µ 13 –ª–µ—Ç.**\n\n1. –ú–∞—Ç–µ—Ä–∏—Ç—å—Å—è –º–æ–∂–Ω–æ, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n2. –û—Å–∫–æ—Ä–±–ª—è—Ç—å, —Ä–µ–π–¥–µ—Ä–∏—Ç—å, —É–Ω–∏–∂–∞—Ç—å, —Ñ–ª—É–¥–∏—Ç—å, —Ç—Ä–æ–ª–ª–∏—Ç—å, –ø—É–±–ª–∏—á–Ω–æ —Ö–µ–π—Ç–∏—Ç—å –∫–æ–≥–æ-–ª–∏–±–æ –∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è.\n3. –ü–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –º–ª–∞–¥—à–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã–ø—Ä–∞—à–∏–≤–∞–Ω–∏–µ —Ä–∞–∑–±–∞–Ω–∞ —Ç–∞–∫–∂–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ\n4. –°—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å NSFW-–∫–æ–Ω—Ç–µ–Ω—Ç (–∫ —Ç–∞–∫–∏–º –æ—Ç–Ω–æ—Å—è—Ç—Å—è –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—è, —Ç—Ä–µ—à-—Ä–µ–∫–ª–∞–º–∞, –æ—Ä—É–∂–∏—è, –õ–ì–ë–¢), –∫—Ä–æ–º–µ <#716944492661571623>\n5. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª—ã **—Ç–æ–ª—å–∫–æ –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é!**\n6. –ù–∞—à —Å–µ—Ä–≤–µ—Ä –∏–º–µ–µ—Ç —Ä–µ–∫–ª–∞–º–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, –ø–æ—ç—Ç–æ–º—É –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —á–µ—Ç—ã—Ä–µ—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Advertisement –ø–∏–∞—Ä –∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è. –ï—Å–ª–∏ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∞–≤—Ç–æ–≤–∞—Ä–Ω –∑–∞ –ø–∏–∞—Ä –Ω–∞ –∫–∞–Ω–∞–ª–∞—Ö —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Ç–æ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ—Ä–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å –í–∞—Å.\n7. –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã –∏ –∏–≥—Ä—ã –Ω–∞ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞—Ö –∏–ª–∏ –ø–ª–∞–Ω—à–µ—Ç–∞—Ö –ª—É—á—à–µ –æ–±—Å—É–∂–¥–∞—Ç—å –≤ <#716944624610050128>, —Ç. –∫. —á–∞—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ–∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–∞ –∏–≥—Ä–∞–º–∏ (—Ö–æ—Ç—è –∫–æ–≥–æ —è –æ–±–º–∞–Ω—ã–≤–∞—é, –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç), –∞ –¥–ª—è –±–æ—Ç–æ–≤ - <#716944560785457183>!\n8. –°—Ä–∞—á–∏ —É—Å—Ç—Ä–∞–π–≤–∞—Ç–µ –≤ —Ç–æ–ª—å–∫–æ <#705792778243670057>, –Ω–æ —É—á—Ç–∏—Ç–µ, —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞ DMIT Computers –Ω–µ –±—É–¥–µ—Ç –±–∞–Ω–∏—Ç—å/–∫–∏–∫–∞—Ç—å, –¥–∞–±—ã –Ω–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø–æ–¥–æ–±–Ω—ã—Ö —Å—Ä–∞—á–∞—Ö. (–ò–Ω–∞—á–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–æ–ª—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—ã–º —Ä–µ–∂–∏–º–æ–º, —Ç–∞–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –º—É—Ç).\n9. –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ–ª—Ñ–±–æ—Ç–∞ (–¥–∞–∂–µ —Å –∞–ª—å—Ç–æ–≤)\n\n–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: https://discord.gg/9husXQy\n\n–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏—Å–∫–ª—é—á–µ–Ω—ã –≤ <#716944492661571623>, –∫—Ä–æ–º–µ –ø—Ä–∞–≤–∏–ª–∞ ‚Ññ6. –° –≤–æ–ø—Ä–æ—Å–∞–º–∏ –Ω–∞—Å—á–µ—Ç –ø—Ä–∞–≤–∏–ª –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å –≤ –ª–∏—á–∫—É –î–∏—Å–∫–æ—Ä–¥–∞ (<@484921597015359488>). –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞ DMIT Computers –º–æ–∂–µ—Ç –∑–∞–±–∞–Ω–∏—Ç—å –∏–ª–∏ –∫–∏–∫–Ω—É—Ç—å –í–∞—Å –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã, —Ç–∞–∫ —á—Ç–æ –º–µ–Ω—è —Å–∏–ª—å–Ω–æ –Ω–µ —Ä—É–≥–∞–π—Ç–µ.",
        footer: {
          text: "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: 19 –∏—é–Ω—è 2020 –≥., 07:42 –ú–°–ö"
        }
      }
    };
    var punishment_embed = {
      embed: {
        color: 0x87ff32,
        author: {
          name: "–ö–∞–∫ –Ω–∞–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤?"
        },
        description:
          "–ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è (–Ω–µ —Ç–æ–ª—å–∫–æ, –Ω–æ –∏ –±–æ—Ç—ã) –º–æ–∂–µ—Ç –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –ø–æ—Å–ª–µ —Ç—Ä–µ—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π - –ø–æ–ª—É—á–∞–µ—Ç–µ –±–∞–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é.\n\n**üòê –ü–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ**. –ù–∞ –Ω–µ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–µ –¥–µ–π—Å—Ç–≤—É—é—Ç. –ú–æ–∂–µ—Ç –±—ã—Ç—å, –∫—Ç–æ-—Ç–æ —Å–ª—É—á–∞–π–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ –¥–µ–ª–∞–ª.\n**üò† –í—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ** - –≥–ª–æ–±–∞–ª—å–Ω—ã–π –º—É—Ç –Ω–∞ 4 —á–∞—Å–∞ –∏ –∑–∞–ø—Ä–µ—Ç –∫ —á—Ç–µ–Ω–∏—é <#716944492661571623> (–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ —á–∞—Ç–∞) –∏ —Ä—è–¥–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤, –∏ –∑–∞–ø—Ä–µ—Ç –∫ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—é –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤\n**üò° –¢—Ä–µ—Ç—å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ** - –Ω–µ–¥–µ–ª—å–Ω—ã–π –±–∞–Ω\n**ü§¨ –¢—Ä–µ—Ç—å–µ –ø–æ—Å–ª–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ** - –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –±–∞–Ω.\n\n–°—Ç—Ä–∞–π–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª–µ <#716944103559921685>.",
        footer: {
          text: "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: 19 –∏—é–Ω—è 2020 –≥., 07:42 –ú–°–ö"
        }
      }
    };
    message.channel.send(rules_embed);
    message.channel.send(punishment_embed);
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (message.content.startsWith(prefix + "help_srv")) {
    if (message.author.id !== "484921597015359488") return;
    var chsname_embed = {
      embed: {
        color: 0x00a4d6,
        author: {
          name: "–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞"
        },
        description:
          "<#716943235431268385> - –ñ—É—Ä–Ω–∞–ª –≤—Ö–æ–¥/–≤—ã—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å",
        fields: [
          {
            name: "Main (–ì–ª–∞–≤–Ω–æ–µ)",
            value:
              "<#716943914875092994> - –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞\n<#718395547870036058> - –∫–∞–Ω–∞–ª —Å —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í—ã —É–∂–µ –∑–¥–µ—Å—å)\n<#716948512906149901> - –Ω–æ–≤–æ—Å—Ç–Ω–∞—è –ª–µ–Ω—Ç–∞\n<#716943961167757344> - –ª–µ–Ω—Ç–∞ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –æ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ –∫–∞–Ω–∞–ª–∞ DMIT Computers (–µ—Å–ª–∏ –∫—Ç–æ –Ω–µ –Ω–∞–∂–∞–ª –Ω–∞ –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫ –Ω–∞ –∫–∞–Ω–∞–ª–µ)\n<#716943985238605824> - –ø–æ—Å—Ç—ã –≤ –º–æ–µ–º –¢–≤–∏—Ç—Ç–µ—Ä–µ (—Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è)\n<#716944103559921685> - –∂—É—Ä–Ω–∞–ª —Å—Ç—Ä–∞–π–∫–æ–≤ –∏–ª–∏, –∏–Ω–∞—á–µ –≥–æ–≤–æ—Ä—è, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö –ø—Ä–∞–≤–∏–ª"
          },
          {
            name: "Commincation (–û–±—â–µ–Ω–∏–µ)",
            value:
              "<#716944492661571623> - –∫–∞–Ω–∞–ª –¥–ª—è –æ–±—â–µ–Ω–∏—è –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π (–∞–Ω–∞–ª–æ–≥ –æ—Ñ—Ñ—Ç–æ–ø–∞ –∏ —â–∏—Ç–ø–æ—Å—Ç–∏–Ω–≥–∞)\n–ü—Ä–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞, –≤—Å–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –∑–Ω–∞—é—Ç"
          },
          {
            name: "Voice (–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã)",
            value:
              "Voice - –≥–æ–ª–æ—Å–æ–≤–æ–π —á–∞—Ç\nMusic - –º—É–∑—ã–∫–∞\nStream - —Å—Ç—Ä–∏–º—ã\nAFK - AFK-–∫–∞–Ω–∞–ª —Å —Ç–∞–π–º–∞—É—Ç–æ–º –≤ 5 –º–∏–Ω—É—Ç"
          },
          {
            name: "Other (–î—Ä—É–≥–æ–µ)",
            value:
              "<#716998557575413802> - –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–æ–≤ –¥–ª—è —Å–µ–±—è\n<#718114696968011856> - –∫–∞–Ω–∞–ª –Ω–∞ —Ç–µ–º—É —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏—è, —Ä–∞–¥–∏–æ –∏ –ò–¢–í"
          },
          {
            name: "Advertisement (—Ä–µ–∫–ª–∞–º–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞)",
            value:
              "–í—Å–µ–≥–æ —á–µ—Ç—ã—Ä–µ –∫–∞–Ω–∞–ª–∞. –ü–µ—Ä–≤—ã–µ —Ç—Ä–∏ - –ø–∏–∞—Ä YouTube-–∫–∞–Ω–∞–ª–æ–≤, Discord-—Å–µ—Ä–≤–µ—Ä–æ–≤, –≥—Ä—É–ø–ø –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –ß–µ—Ç–≤–µ—Ä—Ç—ã–π - —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —Å–∞–π—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, Telegram-–∫–∞–Ω–∞–ª\n\n–í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã."
          }
        ],
        footer: {
          text:
            "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: 18 –∏—é–Ω—è 2020 –≥., 12:46 –ú–°–ö | –ß–∞—Å—Ç—å 1. –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤"
        }
      }
    };
    var rlsname_embed = {
      embed: {
        color: 0x00a4d6,
        author: {
          name: "–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞"
        },
        description:
          'Owner - –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞\n\nAdministrative Bots - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –±–æ—Ç—ã\n\nBots - –±–æ—Ç—ã –±–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤\n\nAdminstrator - (—ç—Ç–æ –∏ —Ç–∞–∫ –ø–æ–Ω—è—Ç–Ω–æ)\n\nJunior administrator - –º–ª–∞–¥—à–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n\nHeightened self-esteem - –ª—é–¥–∏ —Å –∑–∞–≤—ã—à–µ–Ω–Ω—ã–º –ß–°–í\n\nMy longtime subscriber - –º–æ–π –¥–∞–≤–Ω–∏–π –ø–æ–¥–ø–∏—Å—á–∏–∫\n**–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å?** –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –±–æ–ª–µ–µ 1 –≥–æ–¥–∞)\n\nMy subscriber - –º–æ–π –ø–æ–¥–ø–∏—Å—á–∏–∫\n**–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å?** –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ, –æ—Ç–ø—Ä–∞–≤–∏–≤ –≤ –õ–° (<@484921597015359488>) —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –∫–Ω–æ–ø–∫–æ–π "–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã". –ï—Å–ª–∏ –ª–∏—á–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞, –¥–æ–±–∞–≤–ª—è–π—Ç–µ –º–µ–Ω—è –≤ –¥—Ä—É–∑—å—è.\n\nMember - –£—á–∞—Å—Ç–Ω–∏–∫–∏\nNewbie - –Ω–µ–¥–∞–≤–Ω–æ –∑–∞—à–µ–¥—à–∏–µ –≤ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä, –∏–Ω–æ–≥–¥–∞ –Ω–æ–≤–æ—Ä–µ–≥–∏. –†–æ–ª—å —Ç–µ–ø–µ—Ä—å —Å–Ω–∏–º–∞–µ—Ç—Å—è —Å–ø—É—Å—Ç—è 5 –¥–Ω–µ–π –ø–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è, –∏–Ω–æ–≥–¥–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π.',
        footer: {
          text:
            "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: 18 –∏—é–Ω—è 2020 –≥., 10:34 –ú–°–ö | –ß–∞—Å—Ç—å 2. –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π"
        }
      }
    };
    var clrname_embed = {
      embed: {
        color: 0x00a4d6,
        author: {
          name: "–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞"
        },
        description:
          "**–ö—Ä–∞—Å–Ω—ã–π, —Å–∏–Ω–∏–π –∏ –∑–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç–∞** - `juni!red`, `juni!green`, `juni!blue`\n\n–¢–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π, –∫–æ—Ä–∏—á–Ω–µ–≤—ã–π, —Ç–µ–º–Ω–æ-–æ–ª–∏–≤–∫–æ–≤—ã–π, —Ç–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π, —Ç–µ–º–Ω–æ-–∏–∑—É–º—Ä—É–¥–Ω—ã–π, —Ç–µ–º–Ω–æ-–≥–æ–ª—É–±–æ–π, —Ç–µ–º–Ω–æ-—Å–∏–Ω–∏–π, —Ç–µ–º–Ω–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π –∏ —Ç–µ–º–Ω–æ-—Ä–æ–∑–æ–≤—ã–π - `juni!dark-red`, `juni!brown`, `juni!dark-olive`, `juni!dark-green`, `juni!dark-cyan`, `juni!dark-blue`, `juni!dark-violet`, `juni!dark-rose`\n\n–û—Ä–∞–Ω–∂–µ–≤—ã–π, –æ–ª–∏–≤–∫–æ–≤—ã–π, –∂–µ–ª—Ç—ã–π, –∏–∑—É–º—Ä—É–¥–Ω—ã–π, –≥–æ–ª—É–±–æ–π, —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π, —Ä–æ–∑–æ–≤—ã–π - `juni!orange`, `juni!olive`, `juni!yellow`, `juni!cyan`, `juni!sky-blue`, `juni-violet`, `juni!rose`\n\n–°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π, –ø–µ—Ä—Å–∏–∫–æ–≤—ã–π –∏ —Ü–≤–µ—Ç –∫–∞—Ä–¥–∏–Ω–∞–ª–∞ - `juni!silver`, `juni!apricot`, `juni!cardinal`",
        footer: {
          text:
            "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: 5 –∏—é–Ω—è 2020 –≥., 13:50 –ú–°–ö | –ß–∞—Å—Ç—å 3. –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞"
        }
      }
    };
    var botprefixes_embed = {
      embed: {
        color: 0x00a4d6,
        author: {
          name: "–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞"
        },
        description:
          "**XStep Bot** - `xs.`, `xs!`, `—Ö—Å.`, `—Ö—Å!` (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ - `xs.help`)\nJuniperBot - `juni!` (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ - `juni!help`)\nRythm - `r.` (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ - `r.help`)\nNotSoBot - `.` (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ - `.help`)\nShoBlet - `Sho` (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ - `ShoHelp`)\nm1t3nk0v.b0t - `m!` (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ `m!help`)\nZarich's Bot - `z/` (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ - `z/help`)",
        footer: {
          text:
            "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: 18 –∏—é–Ω—è 2020 –≥., 10:33 –ú–°–ö | –ß–∞—Å—Ç—å 4. –ü—Ä–µ—Ñ–∏–∫—Å—ã –±–æ—Ç–æ–≤"
        }
      }
    };
    message.channel.send(chsname_embed);
    message.channel.send(rlsname_embed);
    message.channel.send(clrname_embed);
    message.channel.send(botprefixes_embed);
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  try {
    if (message.member.hasPermission("ADMINISTRATOR")) return;
  } catch (e) {}
  if (message.content.startsWith("@everyone")) {
    message.channel.send("<@" + message.author + ">, –Ω—É –º–æ–∂–µ—Ç —Ö–≤–∞—Ç–∏—Ç, –∞?");
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "say ") ||
    message.content.startsWith(prefix_a + "say ") ||
    message.content.startsWith(prefix_b + "say ") ||
    message.content.startsWith(prefix_c + "say ")
  ) {
    var t_log = {
      embed: {
        color: 0x008800,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    client.channels.cache.get("564022728143929370").send(t_log);
    let args = message.content.split(" ").slice(1);
    const sayMessage = args.join(" ");
    message
      .delete()
      .catch(
        console.log(
          "\n\nError! I can not manage messages.\n\nReason\n" +
            message.author.tag +
            ": " +
            message.content
        )
      );
    // And we get the bot to say the thing:
    message.channel.send(
      sayMessage + "\n\n*–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º " + message.author.tag + ".*"
    );
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "currency") ||
    message.content.startsWith(prefix_a + "currency") ||
    message.content.startsWith(prefix_b + "currency") ||
    message.content.startsWith(prefix_c + "currency")
  ) {
    var t_log = {
      embed: {
        color: 0x008800,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    client.channels.cache.get("564022728143929370").send(t_log);
    let args = message.content.split(" ").slice(1);
  }
});

const QUERY_STRING_SETTINGS = [
  "client=chrome",
  "rls=en",
  "ie=UTF-8",
  "oe=UTF-8"
].join("&");

function getText(children) {
  if (children.children) return getText(children.children);
  return children
    .map(c => {
      return c.children ? getText(c.children) : c.data;
    })
    .join("");
}

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "randemoji") ||
    message.content.startsWith(prefix_a + "randemoji") ||
    message.content.startsWith(prefix_b + "randemoji") ||
    message.content.startsWith(prefix_c + "randemoji")
  ) {
    var t_log = {
      embed: {
        color: 0x558800,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      let emoji = [
        ":joy:",
        ":thinking:",
        ":grin:",
        ":slight_smile:",
        ":grimacing:",
        ":wink:",
        ":slight_smile:",
        ":worried:",
        ":angry:",
        ":rage:",
        ":hushed:",
        ":scream:",
        ":cry:",
        ":sob:",
        ":zipper_mouth:",
        ":raised_hands:",
        ":thumbsup:",
        ":thumbsdown:",
        ":frowning2:",
        ":ok_hand:",
	":nerd:",
	":poop:",
	":face_vomiting:",
	":face_with_symbols_over_mouth:",
	":partying_face:",
	":clown:",
	":exploding_head:",
	":zany_face:",
	":cold_face:",
	":hot_face:",
      ];
      let rand = Math.floor(Math.random() * emoji.length);
      var emoji_embed = {
        embed: {
          color: 0x7b50ff,
          author: {
            name: "–†–∞–Ω–¥–æ–º–Ω—ã–µ —ç–º–æ–¥–∂–∏",
            icon_url: client.user.avatarURL()
          },
          description: emoji[rand]
        }
      };
      message.channel.send(emoji_embed);
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (
    message.content.startsWith(prefix + "srvlist") ||
    message.content.startsWith(prefix_a + "srvlist") ||
    message.content.startsWith(prefix_b + "srvlist") ||
    message.content.startsWith(prefix_c + "srvlist")
  ) {
    let args = message.content.split(" ").slice(1); 
    if(message.content.slice(11) === "hide") {
      var hidesrvreq_embed = {
      embed: {
        color: 0x7b50ff,
        author: {
          name:
            "–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫—Ä—ã—Ç–∏–µ –í–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞",
          icon_url: message.author.avatarURL()
        },
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –æ–±–Ω–æ–≤—è—Ç –∫–æ–¥ –±–æ—Ç–∞...\n\n–í–æ–∑–º–æ–∂–Ω–æ, –≤—Å–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞ –±–æ—Ç–∞."
      }
    };
   message.channel.send(hidesrvreq_embed);
       var reportmsg_embed = {
      embed: {
        color: 0x008be9,

        author: {
          name: "–°–ª—É–∂–±–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ XStep",
          icon_url: client.user.avatarURL()
        },
        description:
          message.author.tag +
          ' –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫—Ä—ã—Ç–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞',
        fields: [
          {
            name: "–ò–º—è –∏ ID —Å–µ—Ä–≤–µ—Ä–∞",
            value: message.guild.name + " | " + message.guild.id
          },
          {
            name: "–ò–º—è –∏ ID –∫–∞–Ω–∞–ª–∞",
            value: message.channel.name + " | " + message.channel.id
          },
          {
            name: "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            value: message.author.id
          }
        ]
      }
    };
      
      let str = "<@484921597015359488>"; 

      let id = str.replace(/[<@!>]/g, "");

      client.users.fetch(id).then(user => {
        user.send(reportmsg_embed);
      });
   } else {
    var str = "";
    var membc = "0";
    var onlinecount = "0";
    var ar = client.guilds.cache.array();
    for (let i = 0; i < ar.length; i++) {
      if (ar[i].memberCount > 100) membc = ar[i].memberCount;
      if (ar[i].memberCount < 100 && ar[i].memberCount > 10)
        membc = " " + ar[i].memberCount;
      if (ar[i].memberCount < 10) membc = "  " + ar[i].memberCount;
      if (ar[i].presences.cache.size > 100)
        onlinecount = ar[i].presences.cache.size;
      if (ar[i].presences.cache.size < 100 && ar[i].presences.size > 10)
        onlinecount = " " + ar[i].presences.cache.size;
      if (ar[i].presences.cache.size < 10)
        onlinecount = "  " + ar[i].presences.cache.size;
      var name = "";
      if(ar[i].id == "566913404468723744" || ar[i].id == "713291763644760094"
         || ar[i].id == "436098246696501250" || ar[i].id == "704698294403596470") 
      {name = "[–°–∫—Ä—ã—Ç—ã–π —Å–µ—Ä–≤–µ—Ä]"} else {name = ar[i].name}
      str +=
        i +
        1 +
        ". " +
        name +
        "\n    –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: " +
        intformat.sprf("%3d", ar[i].memberCount) +
        " | –û–Ω–ª–∞–π–Ω: " +
        intformat.sprf("%3d", ar[i].presences.cache.size) +
        " | –†–µ–≥–∏–æ–Ω: " +
        ar[i].region[0].toUpperCase() +
        ar[i].region.slice(1) +
        "\r\n";
    }
    var srvlist_embed = {
      embed: {
        color: 0x7b50ff,
        author: {
          name:
            "–°–ø–∏—Å–æ–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ (–≤—Å–µ–≥–æ " + client.guilds.cache.size + ")",
          icon_url: message.author.avatarURL()
        },
        description: "```" + str + "```\n–ù–µ —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ –í–∞—à —Å–µ—Ä–≤–µ—Ä –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è –≤ –ø—É–±–ª–∏—á–Ω–æ–º —Å–ø–∏—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ –±–æ—Ç–∞ XStep? –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞–º –∫–æ–º–∞–Ω–¥–æ–π `xs.srvlist hide` (–¥–ª—è —ç—Ç–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—Ä–µ–º—è)",
      }
    };
    message.channel.send(srvlist_embed);
   }
}});


    function ghfimg(result, arr) {
	var j, temp;
	for(var i = arr.length - 1; i > 0; i--){
		j = Math.floor(Math.random()*(i + 1));
		temp = arr[j];
		arr[j] = arr[i];
		arr[i] = temp;
	}
	resultsh = [arr[0], result];
	if (ghf.humour[23] === resultsh[0]) result = ghf.pictures[0]
	else if (ghf.humour[24] === resultsh[0]) result = ghf.pictures[1]
	else if (ghf.humour[25] === resultsh[0]) result = ghf.pictures[2]
	else if (ghf.humour[26] === resultsh[0]) result = ghf.pictures[3]
	else if (ghf.humour[27] === resultsh[0]) result = ghf.pictures[4]
	else if (ghf.humour[28] === resultsh[0]) result = ghf.pictures[5]
	else if (ghf.humour[29] === resultsh[0]) result = ghf.pictures[6]
	else if (ghf.humour[30] === resultsh[0]) result = ghf.pictures[7]
	else if (ghf.humour[31] === resultsh[0]) result = ghf.pictures[8]
	else if (ghf.humour[32] === resultsh[0]) result = ghf.pictures[9]
	else if (ghf.humour[33] === resultsh[0]) result = ghf.pictures[10]
	else if (ghf.humour[34] === resultsh[0]) result = ghf.pictures[11]
	else if (ghf.humour[35] === resultsh[0]) result = ghf.pictures[12]
	else if (ghf.humour[36] === resultsh[0]) result = ghf.pictures[13]
	else if (ghf.humour[37] === resultsh[0]) result = ghf.pictures[14]
	else if (ghf.humour[38] === resultsh[0]) result = ghf.pictures[15]
	else result = " ";
	resultsh = [arr[0], result];
	return resultsh;
};

client.on("message", async message => {
  if (message.author === client.user) return;
  if (
    message.content.startsWith(prefix + "ghf") ||
    message.content.startsWith(prefix_a + "ghf") ||
    message.content.startsWith(prefix_b + "ghf") ||
    message.content.startsWith(prefix_c + "ghf")
  ) {
	  ghfimg("", ghf.humour)
	  	var ghfi = "";

    var humour_embed = {
      embed: {
        color: 0x7b50ff,
        author: {
          name: "–ó–æ–ª–æ—Ç–æ–π —Ñ–æ–Ω–¥ —é–º–æ—Ä–∞",
          icon_url: message.author.avatarURL()
        },
        description: resultsh[0],
        image: {
              url: resultsh[1]
        },      
	  }
    };
    var humour2_embed = {
      embed: {
        color: 0x7b50ff,
        author: {
          name: "–ó–æ–ª–æ—Ç–æ–π —Ñ–æ–Ω–¥ —é–º–æ—Ä–∞",
          icon_url: message.author.avatarURL()
        },
        description: resultsh[0],
        image: {
              url: resultsh[1]
        },      
      }
    };
    let humour_m = await message.channel.send(humour_embed);
    await humour_m.react("üîÉ");
    const collector = humour_m.createReactionCollector(
      (reaction, user) =>
        reaction.emoji.name === "üîÉ" && user.id == message.author.id,
      { time: 40000 }
    );
    collector.on("collect", async r => {
      switch (r.emoji.name) {
        case "üîÉ":
			  ghfimg("", ghf.humour)
          await humour_m.edit(humour2_embed);
          break;
      }
    });
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "donate") ||
    message.content.startsWith(prefix_a + "donate") ||
    message.content.startsWith(prefix_b + "donate") ||
    message.content.startsWith(prefix_c + "donate")
  ) {
    var t_log = {
      embed: {
        color: 0x00aa00,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    if (blockid === message.author.id) {
      message.channel.send(blockmsg_embed);
    } else {
      client.channels.cache.get("564022728143929370").send(t_log);
      var donate_embed = {
        embed: {
          color: 0x44aa44,
          author: {
            name: "–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ",
            icon_url: client.user.avatarURL()
          },
          description:
            "üíµ –ó–∞ –¥–æ–Ω–∞—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n1. –ö–æ–º–∞–Ω–¥—É `xs.ads +` –¥–ª—è —Ä–µ–∫–ª–∞–º—ã –í–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!\n\nhttps://donationalerts.com/r/dmitryevpc\n\n–ú–∏–Ω. - 15 RUB (—Ä.)/6 UAH (—É–∫—Ä. –≥—Ä.)/0.15 USD (–¥–æ–ª–ª. –°–®–ê)"
        }
      };
      message.channel.send(donate_embed);
    }
  }
});

client.on("message", message => {
  if (message.author === client.user) return;
  if (message.channel.type === "dm") return;
  if (
    message.content.startsWith(prefix + "rps") ||
    message.content.startsWith(prefix_a + "rps") ||
    message.content.startsWith(prefix_b + "rps") ||
    message.content.startsWith(prefix_c + "rps")
  ) {
    var t_log = {
      embed: {
        color: 0x00aa00,
        author: {
          name: "Commands Log"
        },
        description:
          message.author.tag +
          " typing `" +
          message.content +
          "` on " +
          message.guild.name +
          "/" +
          message.channel.name,
        fields: [
          {
            name: "Server ID",
            value: message.guild.id
          },
          {
            name: "Channel ID",
            value: message.channel.id
          },
          {
            name: "User ID",
            value: message.author.id
          }
        ]
      }
    };
    var resultg = "";
    var rpserr_embed = {
      embed: {
        color: 0x9933ff,
        author: {
          name: "–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞",
          icon_url: client.user.avatarURL()
        },
        description: "–î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è - `–∫–∞–º–µ–Ω—å` `–Ω–æ–∂–Ω–∏—Ü—ã` `–±—É–º–∞–≥–∞`",
        fields: [
          {
            name: "–ü—Ä–∏–º–µ—Ä",
            value: "`xs.rps –Ω–æ–∂–Ω–∏—Ü—ã`"
          }
        ]
      }
    };
    let args = message.content.split(" ").slice(1);
    let choice = args.join(" ").toLowerCase();
    if (choice === "" || choice === " ") message.channel.send(rpserr_embed);
    const choices = [
      "–∫–∞–º–µ–Ω—å",
      "–±—É–º–∞–≥–∞",
      "–Ω–æ–∂–Ω–∏—Ü—ã",
      choice,
      "–∫–∞–º–µ–Ω—å",
      "–±—É–º–∞–≥–∞",
      "–Ω–æ–∂–Ω–∏—Ü—ã"
    ];
    const response = choices[Math.floor(Math.random() * choices.length)];
    if (choice === "rock" || choice === "–∫–∞–º–µ–Ω—å") {
      if (response === "rock" || response === "–∫–∞–º–µ–Ω—å")
        resultg = "–Ø –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å.\n–£ –Ω–∞—Å –Ω–∏—á—å—è!";
      else if (response === "paper" || response === "–±—É–º–∞–≥–∞")
        resultg = "–Ø –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å.\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.";
      else resultg = "–Ø –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã –∏ —Ç—ã –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å.\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!";
    } else if (choice === "paper" || choice === "–±—É–º–∞–≥–∞") {
      if (response === "rock" || response === "–∫–∞–º–µ–Ω—å")
        resultg = "–Ø –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É.\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!";
      else if (response === "paper" || response === "–±—É–º–∞–≥–∞")
        resultg = "–Ø –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É.\n–£ –Ω–∞—Å –Ω–∏—á—å—è!";
      else resultg = "–Ø –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã –∏ —Ç—ã –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É.\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.";
    } else if (choice === "scissors" || choice === "–Ω–æ–∂–Ω–∏—Ü—ã") {
      if (response === "rock" || response === "–∫–∞–º–µ–Ω—å")
        resultg = "–Ø –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã.\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.";
      else if (response === "paper" || response === "–±—É–º–∞–≥–∞")
        resultg = "–Ø –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã.\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!";
      else resultg = "–Ø –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã.\n–£ –Ω–∞—Å –Ω–∏—á—å—è!";
    } else {
      if (choice !== "" || choice !== " ") {
        if (response === "rock" || response === "–∫–∞–º–µ–Ω—å")
          resultg =
            "–Ø –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª " + choice + "\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.";
        else if (response === "paper" || response === "–±—É–º–∞–≥–∞")
          resultg =
            "–Ø –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª " + choice + "\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.";
        else if (response === "scissors" || choice === "–Ω–æ–∂–Ω–∏—Ü—ã")
          resultg = "–Ø –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã, –∏ —Ç—ã –≤—ã–±—Ä–∞–ª " + choice + "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.";
        else if (response === choice)
          resultg =
            "–Ø –≤—ã–±—Ä–∞–ª " + choice + " –∏ —Ç—ã –≤—ã–±—Ä–∞–ª " + choice + "\n–£ –Ω–∞—Å –Ω–∏—á—å—è!";
      }
    }
    var rps_embed = {
      embed: {
        color: 0x9933ff,
        author: {
          name: "–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞",
          icon_url: client.user.avatarURL()
        },
        description: resultg || "–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"
      }
    };
    message.channel.send(rps_embed);
  }
});

client.on(`message`, async message => {
  if (message.author === client.user) return;
  if (message.content.startsWith(prefix + "off")) {
    if (message.author.id !== "484921597015359488") return;
    message.channel.send("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...");
    await client.destroy();
    timerId = setTimeout(function shutdown() {
      process.exit(-1);
    }, 4000);
  }
});
